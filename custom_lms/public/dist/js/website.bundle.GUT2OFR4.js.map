{
  "version": 3,
  "sources": ["../../../../../apps/custom_lms/custom_lms/public/js/common_functions.js", "../../../../../apps/custom_lms/custom_lms/public/js/profile.js", "../../../../../apps/custom_lms/custom_lms/public/js/website.bundle.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/dom.js", "../../../../../apps/frappe/node_modules/frappe-charts/node_modules/style-inject/dist/style-inject.es.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/constants.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/objects/SvgTip.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/helpers.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/draw-utils.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/draw.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/colors.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/animate.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/animation.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/charts/BaseChart.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/export.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/css/chartsCss.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/charts/AggregationChart.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/date-utils.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/objects/ChartComponents.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/charts/PercentageChart.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/charts/PieChart.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/intervals.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/charts/Heatmap.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/axis-chart-utils.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/charts/AxisChart.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/chart.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/charts/DonutChart.js", "../../../../../apps/frappe/frappe/public/js/frappe/ui/chart.js", "../../../../../apps/frappe/frappe/public/js/frappe/ui/alt_keyboard_shortcuts.js", "../../../../../apps/frappe/frappe/public/js/frappe/ui/keyboard.js", "../../../../../apps/frappe/frappe/public/js/frappe/event_emitter.js"],
  "sourcesContent": ["frappe.ready(() => {\n\tsetup_file_size();\n\tpin_header();\n\n\t$(\".enroll-in-course\").click((e) => {\n\t\tenroll_in_course(e);\n\t});\n\n\t$(\".notify-me\").click((e) => {\n\t\tnotify_user(e);\n\t});\n\n\t$(\".nav-link\").click((e) => {\n\t\tchange_hash(e);\n\t});\n\n\tif (window.location.hash) {\n\t\topen_tab();\n\t}\n\n\tif (window.location.pathname == \"/statistics\") {\n\t\tgenerate_graph(\"New Signups\", \"#new-signups\");\n\t\tgenerate_graph(\"Course Enrollments\", \"#course-enrollments\");\n\t\tgenerate_graph(\"Lesson Completion\", \"#lesson-completion\");\n\t\tgenerate_course_completion_graph();\n\t}\n\n\texpand_the_active_chapter();\n\n\t$(\".chapter-title\")\n\t\t.unbind()\n\t\t.click((e) => {\n\t\t\trotate_chapter_icon(e);\n\t\t});\n\n\t$(\".no-preview\").click((e) => {\n\t\tshow_no_preview_dialog(e);\n\t});\n\n\t$(\"#create-class\").click((e) => {\n\t\topen_class_dialog(e);\n\t});\n\n\t$(\"#course-filter\").change((e) => {\n\t\tfilter_courses(e);\n\t});\n});\n\nconst pin_header = () => {\n\tconst el = document.querySelector(\".sticky\");\n\tif (el) {\n\t\tconst observer = new IntersectionObserver(\n\t\t\t([e]) =>\n\t\t\t\te.target.classList.toggle(\"is-pinned\", e.intersectionRatio < 1),\n\t\t\t{ threshold: [1] }\n\t\t);\n\t\tobserver.observe(el);\n\t}\n};\n\nconst setup_file_size = () => {\n\tfrappe.provide(\"frappe.form.formatters\");\n\tfrappe.form.formatters.FileSize = file_size;\n};\n\nconst file_size = (value) => {\n\tif (value > 1048576) {\n\t\tvalue = flt(flt(value) / 1048576, 1) + \"M\";\n\t} else if (value > 1024) {\n\t\tvalue = flt(flt(value) / 1024, 1) + \"K\";\n\t}\n\treturn value;\n};\n\nconst enroll_in_course = (e) => {\n\te.preventDefault();\n\tlet course = $(e.currentTarget).attr(\"data-course\");\n\tif (frappe.session.user == \"Guest\") {\n\t\twindow.location.href = `/login?redirect-to=/courses/${course}`;\n\t\treturn;\n\t}\n\n\tlet batch = $(e.currentTarget).attr(\"data-batch\");\n\tbatch = batch ? decodeURIComponent(batch) : \"\";\n\tfrappe.call({\n\t\tmethod: \"lms.lms.doctype.lms_enrollment.lms_enrollment.create_membership\",\n\t\targs: {\n\t\t\tbatch: batch ? batch : \"\",\n\t\t\tcourse: course,\n\t\t},\n\t\tcallback: (data) => {\n\t\t\tif (data.message == \"OK\") {\n\t\t\t\t$(\".no-preview-modal\").modal(\"hide\");\n\t\t\t\tfrappe.show_alert(\n\t\t\t\t\t{\n\t\t\t\t\t\tmessage: __(\"Enrolled successfully\"),\n\t\t\t\t\t\tindicator: \"green\",\n\t\t\t\t\t},\n\t\t\t\t\t3\n\t\t\t\t);\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\twindow.location.href = `/courses/${course}/learn/1.1`;\n\t\t\t\t}, 1000);\n\t\t\t}\n\t\t},\n\t});\n};\n\nconst notify_user = (e) => {\n\te.preventDefault();\n\tvar course = decodeURIComponent($(\"#outline-heading\").attr(\"data-course\"));\n\tif (frappe.session.user == \"Guest\") {\n\t\twindow.location.href = `/login?redirect-to=/courses/${course}`;\n\t\treturn;\n\t}\n\n\tfrappe.call({\n\t\tmethod: \"lms.lms.doctype.lms_course_interest.lms_course_interest.capture_interest\",\n\t\targs: {\n\t\t\tcourse: course,\n\t\t},\n\t\tcallback: (data) => {\n\t\t\t$(\".no-preview-modal\").modal(\"hide\");\n\t\t\tfrappe.show_alert(\n\t\t\t\t{\n\t\t\t\t\tmessage: __(\n\t\t\t\t\t\t\"You have opted to be notified for this course. You will receive an email when the course becomes available.\"\n\t\t\t\t\t),\n\t\t\t\t\tindicator: \"green\",\n\t\t\t\t},\n\t\t\t\t3\n\t\t\t);\n\t\t\tsetTimeout(() => {\n\t\t\t\twindow.location.reload();\n\t\t\t}, 3000);\n\t\t},\n\t});\n};\n\nconst generate_graph = (chart_name, element, type = \"line\") => {\n\tlet date = frappe.datetime;\n\n\tfrappe.call({\n\t\tmethod: \"lms.lms.utils.get_chart_data\",\n\t\targs: {\n\t\t\tchart_name: chart_name,\n\t\t\ttimespan: \"Select Date Range\",\n\t\t\ttimegrain: \"Daily\",\n\t\t\tfrom_date: date.add_days(date.get_today(), -30),\n\t\t\tto_date: date.add_days(date.get_today(), +1),\n\t\t},\n\t\tcallback: (data) => {\n\t\t\trender_chart(data.message, chart_name, element, type);\n\t\t},\n\t});\n};\n\nconst render_chart = (data, chart_name, element, type) => {\n\tconst chart = new frappe.Chart(element, {\n\t\ttitle: chart_name,\n\t\tdata: data,\n\t\ttype: type,\n\t\theight: 250,\n\t\tcolors: [\"#4563f1\"],\n\t\taxisOptions: {\n\t\t\txIsSeries: 1,\n\t\t},\n\t\tlineOptions: {\n\t\t\tregionFill: 1,\n\t\t},\n\t});\n};\n\nconst generate_course_completion_graph = () => {\n\tfrappe.call({\n\t\tmethod: \"lms.lms.utils.get_course_completion_data\",\n\t\tcallback: (data) => {\n\t\t\trender_chart(\n\t\t\t\tdata.message,\n\t\t\t\t\"Course Completion\",\n\t\t\t\t\"#course-completion\",\n\t\t\t\t\"pie\"\n\t\t\t);\n\t\t},\n\t});\n};\n\nconst change_hash = (e) => {\n\twindow.location.hash = $(e.currentTarget).attr(\"href\");\n};\n\nconst open_tab = () => {\n\t$(`a[href=\"${window.location.hash}\"]`).click();\n};\n\nconst expand_the_first_chapter = () => {\n\tlet elements = $(\".course-home-outline .collapse\");\n\telements.each((i, element) => {\n\t\tif (i < 1) {\n\t\t\tshow_section(element);\n\t\t\treturn false;\n\t\t}\n\t});\n};\n\nconst expand_the_active_chapter = () => {\n\tlet selector = $(\".course-home-headings.title\");\n\n\tif (selector.length && $(\".course-details-page\").length) {\n\t\texpand_for_course_details(selector);\n\t} else if ($(\".active-lesson\").length) {\n\t\t/* For course home page */\n\t\tselector = $(\".active-lesson\");\n\t\tshow_section(selector.parent().parent());\n\t} else {\n\t\t/* If no active chapter then exapand the first chapter */\n\t\texpand_the_first_chapter();\n\t}\n};\n\nconst expand_for_course_details = (selector) => {\n\t$(\".lesson-info\").removeClass(\"active-lesson\");\n\t$(\".lesson-info\").each((i, elem) => {\n\t\tif ($(elem).data(\"lesson\") == selector.data(\"lesson\")) {\n\t\t\t$(elem).addClass(\"active-lesson\");\n\t\t\tshow_section($(elem).parent().parent());\n\t\t}\n\t});\n};\n\nconst show_section = (element) => {\n\t$(element).addClass(\"show\");\n\t$(element)\n\t\t.siblings(\".chapter-title\")\n\t\t.children(\".chapter-icon\")\n\t\t.css(\"transform\", \"rotate(90deg)\");\n\t$(element).siblings(\".chapter-title\").attr(\"aria-expanded\", true);\n};\n\nconst rotate_chapter_icon = (e) => {\n\tlet icon = $(e.currentTarget).children(\".chapter-icon\");\n\tif (icon.css(\"transform\") == \"none\") {\n\t\ticon.css(\"transform\", \"rotate(90deg)\");\n\t} else {\n\t\ticon.css(\"transform\", \"none\");\n\t}\n};\n\nconst show_no_preview_dialog = (e) => {\n\t$(\"#no-preview-modal\").modal(\"show\");\n};\n\nconst open_class_dialog = () => {\n\tthis.class_dialog = new frappe.ui.Dialog({\n\t\ttitle: __(\"New Class\"),\n\t\tfields: [\n\t\t\t{\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\tlabel: __(\"Title\"),\n\t\t\t\tfieldname: \"title\",\n\t\t\t\treqd: 1,\n\t\t\t\tdefault: class_info && class_info.title,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Date\",\n\t\t\t\tlabel: __(\"Start Date\"),\n\t\t\t\tfieldname: \"start_date\",\n\t\t\t\treqd: 1,\n\t\t\t\tdefault: class_info && class_info.start_date,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Date\",\n\t\t\t\tlabel: __(\"End Date\"),\n\t\t\t\tfieldname: \"end_date\",\n\t\t\t\treqd: 1,\n\t\t\t\tdefault: class_info && class_info.end_date,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Select\",\n\t\t\t\tlabel: __(\"Medium\"),\n\t\t\t\tfieldname: \"medium\",\n\t\t\t\toptions: [\"Online\", \"Offline\"],\n\t\t\t\tdefault: (class_info && class_info.medium) || \"Online\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Column Break\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Time\",\n\t\t\t\tlabel: __(\"Start Time\"),\n\t\t\t\tfieldname: \"start_time\",\n\t\t\t\tdefault: class_info && class_info.start_time,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Time\",\n\t\t\t\tlabel: __(\"End Time\"),\n\t\t\t\tfieldname: \"end_time\",\n\t\t\t\tdefault: class_info && class_info.end_time,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Int\",\n\t\t\t\tlabel: __(\"Seat Count\"),\n\t\t\t\tfieldname: \"seat_count\",\n\t\t\t\tdefault: class_info && class_info.seat_count,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\tlabel: __(\"Category\"),\n\t\t\t\tfieldname: \"category\",\n\t\t\t\toptions: \"LMS Category\",\n\t\t\t\tdefault: class_info && class_info.category,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Small Text\",\n\t\t\t\tlabel: __(\"Description\"),\n\t\t\t\tfieldname: \"description\",\n\t\t\t\tdefault: class_info && class_info.description,\n\t\t\t\treqd: 1,\n\t\t\t},\n\t\t],\n\t\tprimary_action_label: __(\"Save\"),\n\t\tprimary_action: (values) => {\n\t\t\tsave_class(values);\n\t\t},\n\t});\n\tthis.class_dialog.show();\n};\n\nconst save_class = (values) => {\n\tfrappe.call({\n\t\tmethod: \"lms.lms.doctype.lms_class.lms_class.create_class\",\n\t\targs: {\n\t\t\ttitle: values.title,\n\t\t\tstart_date: values.start_date,\n\t\t\tend_date: values.end_date,\n\t\t\tdescription: values.description,\n\t\t\tseat_count: values.seat_count,\n\t\t\tstart_time: values.start_time,\n\t\t\tend_time: values.end_time,\n\t\t\tmedium: values.medium,\n\t\t\tcategory: values.category,\n\t\t\tname: class_info && class_info.name,\n\t\t},\n\t\tcallback: (r) => {\n\t\t\tif (r.message) {\n\t\t\t\tfrappe.show_alert({\n\t\t\t\t\tmessage: class_info\n\t\t\t\t\t\t? __(\"Class Updated\")\n\t\t\t\t\t\t: __(\"Class Created\"),\n\t\t\t\t\tindicator: \"green\",\n\t\t\t\t});\n\t\t\t\tthis.class_dialog.hide();\n\t\t\t\twindow.location.href = `/classes/${r.message.name}`;\n\t\t\t}\n\t\t},\n\t});\n};\n\nconst filter_courses = (e) => {\n\tconst course_lists = $(\".course-cards-parent\");\n\tconst filter = $(e.currentTarget).val();\n\tcourse_lists.each((i, list) => {\n\t\tconst course_cards = $(list).children(\".course-card\");\n\t\tcourse_cards.sort((a, b) => {\n\t\t\tvar value1 = $(a).data(filter);\n\t\t\tvar value2 = $(b).data(filter);\n\t\t\treturn value1 > value2 ? -1 : value1 < value2 ? 1 : 0;\n\t\t});\n\t\t$(list).append(course_cards);\n\t});\n};\n", "frappe.ready(() => {\n\thide_profile_and_dashboard_for_guest_users();\n});\n\nconst hide_profile_and_dashboard_for_guest_users = () => {\n\tif (frappe.session.user == \"Guest\") {\n\t\tlet links = $(\".nav-link\").filter(\n\t\t\t(i, elem) =>\n\t\t\t\t$(elem).text().trim() === \"My Profile\" ||\n\t\t\t\t$(elem).text().trim() === \"Dashboard\"\n\t\t);\n\t\tlinks.length && links.each((i, elem) => $(elem).addClass(\"hide\"));\n\t}\n};\n", "import \"./profile.js\";\nimport \"./common_functions.js\";\nimport \"../../../../frappe/frappe/public/js/frappe/ui/chart.js\";\nimport \"../../../../frappe/frappe/public/js/frappe/ui/keyboard.js\";\nimport \"../../../../frappe/frappe/public/js/frappe/event_emitter.js\";\n", "export function $(expr, con) {\n\treturn typeof expr === \"string\" ? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function findNodeIndex(node) {\n\tvar i = 0;\n\twhile (node.previousSibling) {\n\t\tnode = node.previousSibling;\n\t\ti++;\n\t}\n\treturn i;\n}\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif (typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\nexport function getOffset(element) {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n// an element's offsetParent property will return null whenever it, or any of its parents,\n// is hidden via the display style property.\nexport function isHidden(el) {\n\treturn (el.offsetParent === null);\n}\n\nexport function isElementInViewport(el) {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n\t\trect.left >= 0 &&\n\t\trect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n\t\trect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n}\n\nexport function getElementContentWidth(element) {\n\tvar styles = window.getComputedStyle(element);\n\tvar padding = parseFloat(styles.paddingLeft) +\n\t\tparseFloat(styles.paddingRight);\n\n\treturn element.clientWidth - padding;\n}\n\nexport function bind(element, o) {\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function unbind(element, o) {\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function fire(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true);\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n}\n\n// https://css-tricks.com/snippets/javascript/loop-queryselectorall-matches/\nexport function forEachNode(nodeList, callback, scope) {\n\tif (!nodeList) return;\n\tfor (var i = 0; i < nodeList.length; i++) {\n\t\tcallback.call(scope, nodeList[i], i);\n\t}\n}\n\nexport function activate($parent, $child, commonClass, activeClass = 'active', index = -1) {\n\tlet $children = $parent.querySelectorAll(`.${commonClass}.${activeClass}`);\n\n\tforEachNode($children, (node, i) => {\n\t\tif (index >= 0 && i <= index) return;\n\t\tnode.classList.remove(activeClass);\n\t});\n\n\t$child.classList.add(activeClass);\n}\n", "function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n", "export const ALL_CHART_TYPES = ['line', 'scatter', 'bar', 'percentage', 'heatmap', 'pie'];\n\nexport const COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter', 'percentage', 'pie'],\n\tline: ['scatter', 'bar', 'percentage', 'pie'],\n\tpie: ['line', 'scatter', 'percentage', 'bar'],\n\tpercentage: ['bar', 'line', 'scatter', 'pie'],\n\theatmap: []\n};\n\nexport const DATA_COLOR_DIVISIONS = {\n\tbar: 'datasets',\n\tline: 'datasets',\n\tpie: 'labels',\n\tpercentage: 'labels',\n\theatmap: HEATMAP_DISTRIBUTION_SIZE\n};\n\nexport const BASE_MEASURES = {\n\tmargins: {\n\t\ttop: 10,\n\t\tbottom: 10,\n\t\tleft: 20,\n\t\tright: 20\n\t},\n\tpaddings: {\n\t\ttop: 20,\n\t\tbottom: 40,\n\t\tleft: 30,\n\t\tright: 10\n\t},\n\n\tbaseHeight: 240,\n\ttitleHeight: 20,\n\tlegendHeight: 30,\n\n\ttitleFontSize: 12,\n};\n\nexport function getTopOffset(m) {\n\treturn m.titleHeight + m.margins.top + m.paddings.top;\n}\n\nexport function getLeftOffset(m) {\n\treturn m.margins.left + m.paddings.left;\n}\n\nexport function getExtraHeight(m) {\n\tlet totalExtraHeight = m.margins.top + m.margins.bottom\n\t\t+ m.paddings.top + m.paddings.bottom\n\t\t+ m.titleHeight + m.legendHeight;\n\treturn totalExtraHeight;\n}\n\nexport function getExtraWidth(m) {\n\tlet totalExtraWidth = m.margins.left + m.margins.right\n\t\t+ m.paddings.left + m.paddings.right;\n\n\treturn totalExtraWidth;\n}\n\nexport const INIT_CHART_UPDATE_TIMEOUT = 700;\nexport const CHART_POST_ANIMATE_TIMEOUT = 400;\n\nexport const DEFAULT_AXIS_CHART_TYPE = 'line';\nexport const AXIS_DATASET_CHART_TYPES = ['line', 'bar'];\n\nexport const LEGEND_ITEM_WIDTH = 150;\nexport const SERIES_LABEL_SPACE_RATIO = 0.6;\n\nexport const BAR_CHART_SPACE_RATIO = 0.5;\nexport const MIN_BAR_PERCENT_HEIGHT = 0.00;\n\nexport const LINE_CHART_DOT_SIZE = 4;\nexport const DOT_OVERLAY_SIZE_INCR = 4;\n\nexport const PERCENTAGE_BAR_DEFAULT_HEIGHT = 16;\n\n// Fixed 5-color theme,\n// More colors are difficult to parse visually\nexport const HEATMAP_DISTRIBUTION_SIZE = 5;\n\nexport const HEATMAP_SQUARE_SIZE = 10;\nexport const HEATMAP_GUTTER_SIZE = 2;\n\nexport const DEFAULT_CHAR_WIDTH = 7;\n\nexport const TOOLTIP_POINTER_TRIANGLE_HEIGHT = 7.48;\nconst DEFAULT_CHART_COLORS = ['pink', 'blue', 'green', 'grey', 'red', 'yellow', 'purple', 'teal', 'cyan', 'orange'];\nconst HEATMAP_COLORS_GREEN = ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\nexport const HEATMAP_COLORS_BLUE = ['#ebedf0', '#c0ddf9', '#73b3f3', '#3886e1', '#17459e'];\nexport const HEATMAP_COLORS_YELLOW = ['#ebedf0', '#fdf436', '#ffc700', '#ff9100', '#06001c'];\n\nexport const DEFAULT_COLORS = {\n\tbar: DEFAULT_CHART_COLORS,\n\tline: DEFAULT_CHART_COLORS,\n\tpie: DEFAULT_CHART_COLORS,\n\tpercentage: DEFAULT_CHART_COLORS,\n\theatmap: HEATMAP_COLORS_GREEN,\n\tdonut: DEFAULT_CHART_COLORS\n};\n\n// Universal constants\nexport const ANGLE_RATIO = Math.PI / 180;\nexport const FULL_ANGLE = 360;\n", "import { $ } from '../utils/dom';\nimport { TOOLTIP_POINTER_TRIANGLE_HEIGHT } from '../utils/constants';\n\nexport default class SvgTip {\n\tconstructor({\n\t\tparent = null,\n\t\tcolors = []\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.colors = colors;\n\t\tthis.titleName = '';\n\t\tthis.titleValue = '';\n\t\tthis.listValues = [];\n\t\tthis.titleValueFirst = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.makeTooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calcPosition();\n\t}\n\n\tmakeTooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hideTip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.list = this.container.querySelector('.data-point-list');\n\t\tthis.dataPointList = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hideTip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif (this.index) {\n\t\t\tthis.container.setAttribute('data-point-index', this.index);\n\t\t}\n\t\tif (this.titleValueFirst) {\n\t\t\ttitle = `<strong>${this.titleValue}</strong>${this.titleName}`;\n\t\t} else {\n\t\t\ttitle = `${this.titleName}<strong>${this.titleValue}</strong>`;\n\t\t}\n\n\t\tif (this.listValues.length > 4) {\n\t\t\tthis.list.classList.add('tooltip-grid');\n\t\t} else {\n\t\t\tthis.list.classList.remove('tooltip-grid');\n\t\t}\n\n\t\tthis.title.innerHTML = title;\n\t\tthis.dataPointList.innerHTML = '';\n\n\t\tthis.listValues.map((set, i) => {\n\t\t\tconst color = this.colors[i] || 'black';\n\t\t\tlet value = set.formatted === 0 || set.formatted ? set.formatted : set.value;\n\t\t\tlet li = $.create('li', {\n\t\t\t\tinnerHTML: `<div class=\"tooltip-legend\" style=\"background: ${color};\"></div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class=\"tooltip-value\">${value === 0 || value ? value : ''}</div>\n\t\t\t\t\t\t<div class=\"tooltip-label\">${set.title ? set.title : ''}</div>\n\t\t\t\t\t</div>`\n\t\t\t});\n\n\t\t\tthis.dataPointList.appendChild(li);\n\t\t});\n\t}\n\n\tcalcPosition() {\n\t\tlet width = this.container.offsetWidth;\n\n\t\tthis.top = this.y - this.container.offsetHeight\n\t\t\t- TOOLTIP_POINTER_TRIANGLE_HEIGHT;\n\t\tthis.left = this.x - width / 2;\n\t\tlet maxLeft = this.parent.offsetWidth - width;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif (this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if (this.left > maxLeft) {\n\t\t\tlet delta = this.left - maxLeft;\n\t\t\tlet pointerOffset = `calc(50% + ${delta}px)`;\n\t\t\tpointer.style.left = pointerOffset;\n\n\t\t\tthis.left = maxLeft;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tsetValues(x, y, title = {}, listValues = [], index = -1) {\n\t\tthis.titleName = title.name;\n\t\tthis.titleValue = title.value;\n\t\tthis.listValues = listValues;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.titleValueFirst = title.valueFirst || 0;\n\t\tthis.index = index;\n\t\tthis.refresh();\n\t}\n\n\thideTip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshowTip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n", "import { ANGLE_RATIO } from './constants';\n\n/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nexport function floatTwo(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\nexport function arraysEqual(arr1, arr2) {\n\tif(arr1.length !== arr2.length) return false;\n\tlet areEqual = true;\n\tarr1.map((d, i) => {\n\t\tif(arr2[i] !== d) areEqual = false;\n\t});\n\treturn areEqual;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\nexport function shuffle(array) {\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\n\t// https://stackoverflow.com/a/2450976/6495043\n\t// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array?noredirect=1&lq=1\n\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\n\treturn array;\n}\n\n/**\n * Fill an array with extra points\n * @param {Array} array Array\n * @param {Number} count number of filler elements\n * @param {Object} element element to fill with\n * @param {Boolean} start fill at start?\n */\nexport function fillArray(array, count, element, start=false) {\n\tif(!element) {\n\t\telement = start ? array[0] : array[array.length - 1];\n\t}\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\n\treturn array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nexport function getStringWidth(string, charWidth) {\n\treturn (string+\"\").length * charWidth;\n}\n\nexport function bindChange(obj, getFn, setFn) {\n\treturn new Proxy(obj, {\n\t\tset: function(target, prop, value) {\n\t\t\tsetFn();\n\t\t\treturn Reflect.set(target, prop, value);\n\t\t},\n\t\tget: function(target, prop) {\n\t\t\tgetFn();\n\t\t\treturn Reflect.get(target, prop);\n\t\t}\n\t});\n}\n\n// https://stackoverflow.com/a/29325222\nexport function getRandomBias(min, max, bias, influence) {\n\tconst range = max - min;\n\tconst biasValue = range * bias + min;\n\tvar rnd = Math.random() * range + min,\t\t// random in range\n\t\tmix = Math.random() * influence;\t\t// random mixer\n\treturn rnd * (1 - mix) + biasValue * mix;\t// mix full range and bias\n}\n\nexport function getPositionByAngle(angle, radius) {\n\treturn {\n\t\tx: Math.sin(angle * ANGLE_RATIO) * radius,\n\t\ty: Math.cos(angle * ANGLE_RATIO) * radius,\n\t};\n}\n\n/**\n * Check if a number is valid for svg attributes\n * @param {object} candidate Candidate to test\n * @param {Boolean} nonNegative flag to treat negative number as invalid\n */\nexport function isValidNumber(candidate, nonNegative=false) {\n\tif (Number.isNaN(candidate)) return false;\n\telse if (candidate === undefined) return false;\n\telse if (!Number.isFinite(candidate)) return false;\n\telse if (nonNegative && candidate < 0) return false;\n\telse return true;\n}\n\n/**\n * Round a number to the closes precision, max max precision 4\n * @param {Number} d Any Number\n */\nexport function round(d) {\n\t// https://floating-point-gui.de/\n\t// https://www.jacklmoore.com/notes/rounding-in-javascript/\n\treturn Number(Math.round(d + 'e4') + 'e-4');\n}\n\n/**\n * Creates a deep clone of an object\n * @param {Object} candidate Any Object\n */\n export function deepClone(candidate) {\n\tlet cloned, value, key;\n  \n\tif (candidate instanceof Date) {\n\t  return new Date(candidate.getTime());\n\t}\n  \n\tif (typeof candidate !== \"object\" || candidate === null) {\n\t  return candidate;\n\t}\n  \n\tcloned = Array.isArray(candidate) ? [] : {};\n  \n\tfor (key in candidate) {\n\t  value = candidate[key];\n  \n\t  cloned[key] = deepClone(value);\n\t}\n  \n\treturn cloned;\n  }", "import { fillArray } from './helpers';\n\nexport function getBarHeightAndYAttr(yTop, zeroLine) {\n\tlet height, y;\n\tif (yTop <= zeroLine) {\n\t\theight = zeroLine - yTop;\n\t\ty = yTop;\n\t} else {\n\t\theight = yTop - zeroLine;\n\t\ty = zeroLine;\n\t}\n\n\treturn [height, y];\n}\n\nexport function equilizeNoOfElements(array1, array2,\n\textraCount = array2.length - array1.length) {\n\n\t// Doesn't work if either has zero elements.\n\tif (extraCount > 0) {\n\t\tarray1 = fillArray(array1, extraCount);\n\t} else {\n\t\tarray2 = fillArray(array2, extraCount);\n\t}\n\treturn [array1, array2];\n}\n\nexport function truncateString(txt, len) {\n\tif (!txt) {\n\t\treturn;\n\t}\n\tif (txt.length > len) {\n\t\treturn txt.slice(0, len - 3) + '...';\n\t} else {\n\t\treturn txt;\n\t}\n}\n\nexport function shortenLargeNumber(label) {\n\tlet number;\n\tif (typeof label === 'number') number = label;\n\telse if (typeof label === 'string') {\n\t\tnumber = Number(label);\n\t\tif (Number.isNaN(number)) return label;\n\t}\n\n\t// Using absolute since log wont work for negative numbers\n\tlet p = Math.floor(Math.log10(Math.abs(number)));\n\tif (p <= 2) return number; // Return as is for a 3 digit number of less\n\tlet l = Math.floor(p / 3);\n\tlet shortened = (Math.pow(10, p - l * 3) * +(number / Math.pow(10, p)).toFixed(1));\n\n\t// Correct for floating point error upto 2 decimal places\n\treturn Math.round(shortened * 100) / 100 + ['', 'K', 'M', 'B', 'T'][l];\n}\n\n// cubic bezier curve calculation (from example by Fran\u00E7ois Romain)\nexport function getSplineCurvePointsStr(xList, yList) {\n\n\tlet points = [];\n\tconst length = Math.min(xList.length, yList.length);\n\t\n\tfor (let i = 0; i < xList.length; i++) {\n\t\tpoints.push([xList[i], yList[i]]);\n\t}\n\n\tlet smoothing = 0.2;\n\tlet line = (pointA, pointB) => {\n\t\tlet lengthX = pointB[0] - pointA[0];\n\t\tlet lengthY = pointB[1] - pointA[1];\n\t\treturn {\n\t\t\tlength: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n\t\t\tangle: Math.atan2(lengthY, lengthX)\n\t\t};\n\t};\n\n\tlet controlPoint = (current, previous, next, reverse) => {\n\t\tlet p = previous || current;\n\t\tlet n = next || current;\n\t\tlet o = line(p, n);\n\t\tlet angle = o.angle + (reverse ? Math.PI : 0);\n\t\tlet length = o.length * smoothing;\n\t\tlet x = current[0] + Math.cos(angle) * length;\n\t\tlet y = current[1] + Math.sin(angle) * length;\n\t\treturn [x, y];\n\t};\n\n\tlet bezierCommand = (point, i, a) => {\n\t\tlet cps = controlPoint(a[i - 1], a[i - 2], point);\n\t\tlet cpe = controlPoint(point, a[i - 1], a[i + 1], true);\n\t\treturn `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[1]}`;\n\t};\n\n\tlet pointStr = (points, command) => {\n\t\treturn points.reduce((acc, point, i, a) => i === 0\n\t\t\t? `${point[0]},${point[1]}`\n\t\t\t: `${acc} ${command(point, i, a)}`, '');\n\t};\n\n\treturn pointStr(points, bezierCommand);\n}\n", "import { getBarHeightAndYAttr, truncateString, shortenLargeNumber, getSplineCurvePointsStr } from './draw-utils';\nimport { getStringWidth, isValidNumber, round } from './helpers';\nimport { DOT_OVERLAY_SIZE_INCR } from './constants';\n\nexport const AXIS_TICK_LENGTH = 6;\nconst LABEL_MARGIN = 4;\nconst LABEL_MAX_CHARS = 18;\nexport const FONT_SIZE = 10;\nconst BASE_LINE_COLOR = '#E2E6E9';\n\nfunction $(expr, con) {\n\treturn typeof expr === \"string\" ? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function createSVG(tag, o) {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif (typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (i === \"className\") { i = \"class\"; }\n\t\t\tif (i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n\treturn createSVG('linearGradient', {\n\t\tinside: svgDefElem,\n\t\tid: gradientId,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: 0,\n\t\ty2: 1\n\t});\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n\treturn createSVG('stop', {\n\t\t'inside': gradElem,\n\t\t'style': `stop-color: ${color}`,\n\t\t'offset': offset,\n\t\t'stop-opacity': opacity\n\t});\n}\n\nexport function makeSVGContainer(parent, className, width, height) {\n\treturn createSVG('svg', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\twidth: width,\n\t\theight: height\n\t});\n}\n\nexport function makeSVGDefs(svgContainer) {\n\treturn createSVG('defs', {\n\t\tinside: svgContainer,\n\t});\n}\n\nexport function makeSVGGroup(className, transform = '', parent = undefined) {\n\tlet args = {\n\t\tclassName: className,\n\t\ttransform: transform\n\t};\n\tif (parent) args.inside = parent;\n\treturn createSVG('g', args);\n}\n\nexport function wrapInSVGGroup(elements, className = '') {\n\tlet g = createSVG('g', {\n\t\tclassName: className\n\t});\n\telements.forEach(e => g.appendChild(e));\n\treturn g;\n}\n\nexport function makePath(pathStr, className = '', stroke = 'none', fill = 'none', strokeWidth = 2) {\n\treturn createSVG('path', {\n\t\tclassName: className,\n\t\td: pathStr,\n\t\tstyles: {\n\t\t\tstroke: stroke,\n\t\t\tfill: fill,\n\t\t\t'stroke-width': strokeWidth\n\t\t}\n\t});\n}\n\nexport function makeArcPathStr(startPosition, endPosition, center, radius, clockWise = 1, largeArc = 0) {\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeCircleStr(startPosition, endPosition, center, radius, clockWise = 1, largeArc = 0) {\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, center.y * 2, center.y + endPosition.y];\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc} z\n\t\tL${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeArcStrokePathStr(startPosition, endPosition, center, radius, clockWise = 1, largeArc = 0) {\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\n\treturn `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nexport function makeStrokeCircleStr(startPosition, endPosition, center, radius, clockWise = 1, largeArc = 0) {\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, radius * 2 + arcStartY, center.y + startPosition.y];\n\n\treturn `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc}\n\t\tM${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nexport function makeGradient(svgDefElem, color, lighter = false) {\n\tlet gradientId = 'path-fill-gradient' + '-' + color + '-' + (lighter ? 'lighter' : 'default');\n\tlet gradientDef = renderVerticalGradient(svgDefElem, gradientId);\n\tlet opacities = [1, 0.6, 0.2];\n\tif (lighter) {\n\t\topacities = [0.15, 0.05, 0];\n\t}\n\n\tsetGradientStop(gradientDef, \"0%\", color, opacities[0]);\n\tsetGradientStop(gradientDef, \"50%\", color, opacities[1]);\n\tsetGradientStop(gradientDef, \"100%\", color, opacities[2]);\n\n\treturn gradientId;\n}\n\nexport function rightRoundedBar(x, width, height) {\n\t// https://medium.com/@dennismphil/one-side-rounded-rectangle-using-svg-fb31cf318d90\n\tlet radius = height / 2;\n\tlet xOffset = width - radius;\n\n\treturn `M${x},0 h${xOffset} q${radius},0 ${radius},${radius} q0,${radius} -${radius},${radius} h-${xOffset} v${height}z`;\n}\n\nexport function leftRoundedBar(x, width, height) {\n\tlet radius = height / 2;\n\tlet xOffset = width - radius;\n\n\treturn `M${x + radius},0 h${xOffset} v${height} h-${xOffset} q-${radius}, 0 -${radius},-${radius} q0,-${radius} ${radius},-${radius}z`;\n}\n\nexport function percentageBar(x, y, width, height, isFirst, isLast, fill = 'none') {\n\tif (isLast) {\n\t\tlet pathStr = rightRoundedBar(x, width, height);\n\t\treturn makePath(pathStr, 'percentage-bar', null, fill);\n\t}\n\n\tif (isFirst) {\n\t\tlet pathStr = leftRoundedBar(x, width, height);\n\t\treturn makePath(pathStr, 'percentage-bar', null, fill);\n\t}\n\n\tlet args = {\n\t\tclassName: 'percentage-bar',\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height,\n\t\tfill: fill\n\t};\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function heatSquare(className, x, y, size, radius, fill = 'none', data = {}) {\n\tlet args = {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: size,\n\t\theight: size,\n\t\trx: radius,\n\t\tfill: fill\n\t};\n\n\tObject.keys(data).map(key => {\n\t\targs[key] = data[key];\n\t});\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function legendDot(x, y, size, radius, fill = 'none', label, value, font_size = null, truncate = false) {\n\tlabel = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\tif (!font_size) font_size = FONT_SIZE;\n\n\tlet args = {\n\t\tclassName: 'legend-dot',\n\t\tx: 0,\n\t\ty: 4 - size,\n\t\theight: size,\n\t\twidth: size,\n\t\trx: radius,\n\t\tfill: fill\n\t};\n\n\tlet textLabel = createSVG('text', {\n\t\tclassName: 'legend-dataset-label',\n\t\tx: size,\n\t\ty: 0,\n\t\tdx: (font_size) + 'px',\n\t\tdy: (font_size / 3) + 'px',\n\t\t'font-size': (font_size * 1.6) + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label\n\t});\n\n\tlet textValue = null;\n\tif (value) {\n\t\ttextValue = createSVG('text', {\n\t\t\tclassName: 'legend-dataset-value',\n\t\t\tx: size,\n\t\t\ty: FONT_SIZE + 10,\n\t\t\tdx: (FONT_SIZE) + 'px',\n\t\t\tdy: (FONT_SIZE / 3) + 'px',\n\t\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\n\t\t\t'text-anchor': 'start',\n\t\t\tinnerHTML: value\n\t\t});\n\t}\n\n\tlet group = createSVG('g', {\n\t\ttransform: `translate(${x}, ${y})`\n\t});\n\tgroup.appendChild(createSVG(\"rect\", args));\n\tgroup.appendChild(textLabel);\n\n\tif (value && textValue) {\n\t\tgroup.appendChild(textValue);\n\t}\n\n\treturn group;\n}\n\nexport function makeText(className, x, y, content, options = {}) {\n\tlet fontSize = options.fontSize || FONT_SIZE;\n\tlet dy = options.dy !== undefined ? options.dy : (fontSize / 2);\n\tlet fill = options.fill || \"var(--charts-label-color)\";\n\tlet textAnchor = options.textAnchor || 'start';\n\treturn createSVG('text', {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\tdy: dy + 'px',\n\t\t'font-size': fontSize + 'px',\n\t\tfill: fill,\n\t\t'text-anchor': textAnchor,\n\t\tinnerHTML: content\n\t});\n}\n\nfunction makeVertLine(x, label, y1, y2, options = {}) {\n\tlet l = createSVG('line', {\n\t\tclassName: 'line-vertical ' + options.className,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: y1,\n\t\ty2: y2,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: 0,\n\t\ty: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\n\t\tdy: FONT_SIZE + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'middle',\n\t\tinnerHTML: label + \"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(${x}, 0)`\n\t});\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nfunction makeHoriLine(y, label, x1, x2, options = {}) {\n\tif (!options.lineType) options.lineType = '';\n\tif (options.shortenNumbers) {\n\t\tif (options.numberFormatter) {\n\t\t\tlabel = options.numberFormatter(label);\n\t\t} else {\n\t\t\tlabel = shortenLargeNumber(label);\n\t\t}\n\t}\n\n\tlet className = 'line-horizontal ' + options.className +\n\t\t(options.lineType === \"dashed\" ? \"dashed\" : \"\");\n\n\tlet l = createSVG('line', {\n\t\tclassName: className,\n\t\tx1: x1,\n\t\tx2: x2,\n\t\ty1: 0,\n\t\ty2: 0,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: x1 < x2 ? x1 - LABEL_MARGIN : x1 + LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / 2 - 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': x1 < x2 ? 'end' : 'start',\n\t\tinnerHTML: label + \"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(0, ${y})`,\n\t\t'stroke-opacity': 1\n\t});\n\n\tif (text === 0 || text === '0') {\n\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n\t}\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nexport function yLine(y, label, width, options = {}) {\n\tif (!isValidNumber(y)) y = 0;\n\n\tif (!options.pos) options.pos = 'left';\n\tif (!options.offset) options.offset = 0;\n\tif (!options.mode) options.mode = 'span';\n\tif (!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif (!options.className) options.className = '';\n\n\tlet x1 = -1 * AXIS_TICK_LENGTH;\n\tlet x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0;\n\n\tif (options.mode === 'tick' && options.pos === 'right') {\n\t\tx1 = width + AXIS_TICK_LENGTH;\n\t\tx2 = width;\n\t}\n\n\t// let offset = options.pos === 'left' ? -1 * options.offset : options.offset;\n\n\tx1 += options.offset;\n\tx2 += options.offset;\n\n\tif (typeof label === \"number\") label = round(label);\n\n\treturn makeHoriLine(y, label, x1, x2, {\n\t\tclassName: options.className,\n\t\tlineType: options.lineType,\n\t\tshortenNumbers: options.shortenNumbers,\n\t\tnumberFormatter: options.numberFormatter,\n\t});\n}\n\nexport function xLine(x, label, height, options = {}) {\n\tif (!isValidNumber(x)) x = 0;\n\n\tif (!options.pos) options.pos = 'bottom';\n\tif (!options.offset) options.offset = 0;\n\tif (!options.mode) options.mode = 'span';\n\tif (!options.className) options.className = '';\n\n\t// Draw X axis line in span/tick mode with optional label\n\t//                        \ty2(span)\n\t// \t\t\t\t\t\t|\n\t// \t\t\t\t\t\t|\n\t//\t\t\t\tx line\t|\n\t//\t\t\t\t\t\t|\n\t// \t\t\t\t\t   \t|\n\t// ---------------------+-- y2(tick)\n\t//\t\t\t\t\t\t|\n\t//\t\t\t\t\t\t\ty1\n\n\tlet y1 = height + AXIS_TICK_LENGTH;\n\tlet y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height;\n\n\tif (options.mode === 'tick' && options.pos === 'top') {\n\t\t// top axis ticks\n\t\ty1 = -1 * AXIS_TICK_LENGTH;\n\t\ty2 = 0;\n\t}\n\n\treturn makeVertLine(x, label, y1, y2, {\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function yMarker(y, label, width, options = {}) {\n\tif (!isValidNumber(y)) y = 0;\n\n\tif (!options.labelPos) options.labelPos = 'right';\n\tif (!options.lineType) options.lineType = 'dashed';\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\n\t\t: width - getStringWidth(label, 5) - LABEL_MARGIN;\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: x,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label + \"\"\n\t});\n\n\tlet line = makeHoriLine(y, '', 0, width, {\n\t\tstroke: options.stroke || BASE_LINE_COLOR,\n\t\tclassName: options.className || '',\n\t\tlineType: options.lineType\n\t});\n\n\tline.appendChild(labelSvg);\n\n\treturn line;\n}\n\nexport function yRegion(y1, y2, width, label, options = {}) {\n\t// return a group\n\tlet height = y1 - y2;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`, // remove class\n\t\tstyles: {\n\t\t\tfill: options.fill || `rgba(228, 234, 239, 0.49)`,\n\t\t\tstroke: options.stroke || BASE_LINE_COLOR,\n\t\t\t'stroke-dasharray': `${width}, ${height}`\n\t\t},\n\t\t// 'data-point-index': index,\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tif (!options.labelPos) options.labelPos = 'right';\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\n\t\t: width - getStringWidth(label + \"\", 4.5) - LABEL_MARGIN;\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: x,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label + \"\"\n\t});\n\n\tlet region = createSVG('g', {\n\t\ttransform: `translate(0, ${y2})`\n\t});\n\n\tregion.appendChild(rect);\n\tregion.appendChild(labelSvg);\n\n\treturn region;\n}\n\nexport function datasetBar(x, yTop, width, color, label = '', index = 0, offset = 0, meta = {}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\n\tif (height === 0) {\n\t\theight = meta.minHeight;\n\t\ty -= meta.minHeight;\n\t}\n\n\t// Preprocess numbers to avoid svg building errors\n\tif (!isValidNumber(x)) x = 0;\n\tif (!isValidNumber(y)) y = 0;\n\tif (!isValidNumber(height, true)) height = 0;\n\tif (!isValidNumber(width, true)) width = 0;\n\n\t// x y h w\n\n\t// M{x},{y+r}\n\t// q0,-{r} {r},-{r}\n\t// q{r},0 {r},{r}\n\t// v{h-r}\n\t// h-{w}z\n\n\t// let radius = width/2;\n\t// let pathStr = `M${x},${y+radius} q0,-${radius} ${radius},-${radius} q${radius},0 ${radius},${radius} v${height-radius} h-${width}z`\n\n\t// let rect = createSVG('path', {\n\t// \tclassName: 'bar mini',\n\t// \td: pathStr,\n\t// \tstyles: { fill: color },\n\t// \tx: x,\n\t// \ty: y,\n\t// \t'data-point-index': index,\n\t// });\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`,\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tlabel += \"\";\n\n\tif (!label && !label.length) {\n\t\treturn rect;\n\t} else {\n\t\trect.setAttribute('y', 0);\n\t\trect.setAttribute('x', 0);\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: width / 2,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(rect);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function datasetDot(x, y, radius, color, label = '', index = 0, hideDotBorder = false) {\n\tlet dot = createSVG('circle', {\n\t\tstyle: `fill: ${color}; ${hideDotBorder ? `stroke: ${color}`: ''}`,\n\t\t'data-point-index': index,\n\t\tcx: x,\n\t\tcy: y,\n\t\tr: radius\n\t});\n\n\tlabel += \"\";\n\n\tif (!label && !label.length) {\n\t\treturn dot;\n\t} else {\n\t\tdot.setAttribute('cy', 0);\n\t\tdot.setAttribute('cx', 0);\n\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1 - radius) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(dot);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function getPaths(xList, yList, color, options = {}, meta = {}) {\n\tlet pointsList = yList.map((y, i) => (xList[i] + ',' + y));\n\tlet pointsStr = pointsList.join(\"L\");\n\n\t// Spline\n\tif (options.spline)\n\t\tpointsStr = getSplineCurvePointsStr(xList, yList);\n\n\tlet path = makePath(\"M\" + pointsStr, 'line-graph-path', color);\n\n\t// HeatLine\n\tif (options.heatline) {\n\t\tlet gradient_id = makeGradient(meta.svgDefs, color);\n\t\tpath.style.stroke = `url(#${gradient_id})`;\n\t}\n\n\tlet paths = {\n\t\tpath: path\n\t};\n\n\t// Region\n\tif (options.regionFill) {\n\t\tlet gradient_id_region = makeGradient(meta.svgDefs, color, true);\n\n\t\tlet pathStr = \"M\" + `${xList[0]},${meta.zeroLine}L` + pointsStr + `L${xList.slice(-1)[0]},${meta.zeroLine}`;\n\t\tpaths.region = makePath(pathStr, `region-fill`, 'none', `url(#${gradient_id_region})`);\n\t}\n\n\treturn paths;\n}\n\nexport let makeOverlay = {\n\t'bar': (unit) => {\n\t\tlet transformValue;\n\t\tif (unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\toverlay.style.fill = '#000000';\n\t\toverlay.style.opacity = '0.4';\n\n\t\tif (transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'dot': (unit) => {\n\t\tlet transformValue;\n\t\tif (unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif (transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'heat_square': (unit) => {\n\t\tlet transformValue;\n\t\tif (unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif (transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t}\n};\n\nexport let updateOverlay = {\n\t'bar': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif (unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['x', 'y', 'width', 'height'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif (transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'dot': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif (unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif (transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'heat_square': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif (unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif (transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n};\n", "const PRESET_COLOR_MAP = {\n\t'pink': '#F683AE',\n\t'blue': '#318AD8',\n\t'green': '#48BB74',\n\t'grey': '#A6B1B9',\n\t'red': '#F56B6B',\n\t'yellow': '#FACF7A',\n\t'purple': '#44427B',\n\t'teal': '#5FD8C4',\n\t'cyan': '#15CCEF',\n\t'orange': '#F8814F',\n\t'light-pink': '#FED7E5',\n\t'light-blue': '#BFDDF7',\n\t'light-green': '#48BB74',\n\t'light-grey': '#F4F5F6',\n\t'light-red': '#F6DFDF',\n\t'light-yellow': '#FEE9BF',\n\t'light-purple': '#E8E8F7',\n\t'light-teal': '#D3FDF6',\n\t'light-cyan': '#DDF8FD',\n\t'light-orange': '#FECDB8'\n};\n\nfunction limitColor(r) {\n\tif (r > 255) return 255;\n\telse if (r < 0) return 0;\n\treturn r;\n}\n\nexport function lightenDarkenColor(color, amt) {\n\tlet col = getColor(color);\n\tlet usePound = false;\n\tif (col[0] == \"#\") {\n\t\tcol = col.slice(1);\n\t\tusePound = true;\n\t}\n\tlet num = parseInt(col, 16);\n\tlet r = limitColor((num >> 16) + amt);\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\n\tlet g = limitColor((num & 0x0000FF) + amt);\n\treturn (usePound ? \"#\" : \"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function isValidColor(string) {\n\t// https://stackoverflow.com/a/32685393\n\tlet HEX_RE = /(^\\s*)(#)((?:[A-Fa-f0-9]{3}){1,2})$/i;\n\tlet RGB_RE = /(^\\s*)(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/i;\n\treturn HEX_RE.test(string) || RGB_RE.test(string);\n}\n\nexport const getColor = (color) => {\n\t// When RGB color, convert to hexadecimal (alpha value is omitted)\n\tif((/rgb[a]{0,1}\\([\\d, ]+\\)/gim).test(color)) {\n\t\treturn (/\\D+(\\d*)\\D+(\\d*)\\D+(\\d*)/gim).exec(color)\n\t\t\t.map((x, i) => (i !== 0 ? Number(x).toString(16) : '#'))\n\t\t\t.reduce((c, ch) => `${c}${ch}`);\n\t}\n\treturn PRESET_COLOR_MAP[color] || color;\n};\n", "import { getBarHeightAndYAttr, getSplineCurvePointsStr } from './draw-utils';\n\nexport const UNIT_ANIM_DUR = 350;\nexport const PATH_ANIM_DUR = 350;\nexport const MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\nexport const REPLACE_ALL_NEW_DUR = 250;\n\nexport const STD_EASING = 'easein';\n\nexport function translate(unit, oldCoord, newCoord, duration) {\n\tlet old = typeof oldCoord === 'string' ? oldCoord : oldCoord.join(', ');\n\treturn [\n\t\tunit,\n\t\t{ transform: newCoord.join(', ') },\n\t\tduration,\n\t\tSTD_EASING,\n\t\t\"translate\",\n\t\t{ transform: old }\n\t];\n}\n\nexport function translateVertLine(xLine, newX, oldX) {\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\n}\n\nexport function translateHoriLine(yLine, newY, oldY) {\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\n}\n\nexport function animateRegion(rectGroup, newY1, newY2, oldY2) {\n\tlet newHeight = newY1 - newY2;\n\tlet rect = rectGroup.childNodes[0];\n\tlet width = rect.getAttribute(\"width\");\n\tlet rectAnim = [\n\t\trect,\n\t\t{ height: newHeight, 'stroke-dasharray': `${width}, ${newHeight}` },\n\t\tMARKER_LINE_ANIM_DUR,\n\t\tSTD_EASING\n\t];\n\n\tlet groupAnim = translate(rectGroup, [0, oldY2], [0, newY2], MARKER_LINE_ANIM_DUR);\n\treturn [rectAnim, groupAnim];\n}\n\nexport function animateBar(bar, x, yTop, width, offset = 0, meta = {}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\tif (bar.nodeName !== 'rect') {\n\t\tlet rect = bar.childNodes[0];\n\t\tlet rectAnim = [\n\t\t\trect,\n\t\t\t{ width: width, height: height },\n\t\t\tUNIT_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\n\t\tlet oldCoordStr = bar.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(bar, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [rectAnim, groupAnim];\n\t} else {\n\t\treturn [[bar, { width: width, height: height, x: x, y: y }, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animateDot(dot, x, y) {\n\tif (dot.nodeName !== 'circle') {\n\t\tlet oldCoordStr = dot.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(dot, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [groupAnim];\n\t} else {\n\t\treturn [[dot, { cx: x, cy: y }, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animatePath(paths, newXList, newYList, zeroLine, spline) {\n\tlet pathComponents = [];\n\tlet pointsStr = newYList.map((y, i) => (newXList[i] + ',' + y)).join(\"L\");\n\n\tif (spline)\n\t\tpointsStr = getSplineCurvePointsStr(newXList, newYList);\n\n\tconst animPath = [paths.path, { d: \"M\" + pointsStr }, PATH_ANIM_DUR, STD_EASING];\n\tpathComponents.push(animPath);\n\n\tif (paths.region) {\n\t\tlet regStartPt = `${newXList[0]},${zeroLine}L`;\n\t\tlet regEndPt = `L${newXList.slice(-1)[0]}, ${zeroLine}`;\n\n\t\tconst animRegion = [\n\t\t\tpaths.region,\n\t\t\t{ d: \"M\" + regStartPt + pointsStr + regEndPt },\n\t\t\tPATH_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\t\tpathComponents.push(animRegion);\n\t}\n\n\treturn pathComponents;\n}\n\nexport function animatePathStr(oldPath, pathStr) {\n\treturn [oldPath, { d: pathStr }, UNIT_ANIM_DUR, STD_EASING];\n}\n", "// Leveraging SMIL Animations\n\nimport { REPLACE_ALL_NEW_DUR } from './animate';\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\nfunction animateSVGElement(element, props, dur, easingType = \"linear\", type = undefined, oldValues = {}) {\n\n\tlet animElement = element.cloneNode(true);\n\tlet newElement = element.cloneNode(true);\n\n\tfor (var attributeName in props) {\n\t\tlet animateElement;\n\t\tif (attributeName === 'transform') {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet animAttr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: currentValue,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur / 1000 + \"s\",\n\t\t\tvalues: currentValue + \";\" + value,\n\t\t\tkeySplines: EASING[easingType],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif (type) {\n\t\t\tanimAttr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in animAttr) {\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\n\t\t}\n\n\t\tanimElement.appendChild(animateElement);\n\n\t\tif (type) {\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnewElement.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [animElement, newElement];\n}\n\nexport function transform(element, style) { // eslint-disable-line no-unused-vars\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n}\n\nfunction animateSVG(svgContainer, elements) {\n\tlet newElements = [];\n\tlet animElements = [];\n\n\telements.map(element => {\n\t\tlet unit = element[0];\n\t\tlet parent = unit.parentNode;\n\n\t\tlet animElement, newElement;\n\n\t\telement[0] = unit;\n\t\t[animElement, newElement] = animateSVGElement(...element);\n\n\t\tnewElements.push(newElement);\n\t\tanimElements.push([animElement, parent]);\n\n\t\tparent.replaceChild(animElement, unit);\n\t});\n\n\tlet animSvg = svgContainer.cloneNode(true);\n\n\tanimElements.map((animElement, i) => {\n\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\n\t\telements[i][0] = newElements[i];\n\t});\n\n\treturn animSvg;\n}\n\nexport function runSMILAnimation(parent, svgElement, elementsToAnimate) {\n\tif (elementsToAnimate.length === 0) return;\n\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\n\tif (svgElement.parentNode == parent) {\n\t\tparent.removeChild(svgElement);\n\t\tparent.appendChild(animSvgElement);\n\n\t}\n\n\t// Replace the new svgElement (data has already been replaced)\n\tsetTimeout(() => {\n\t\tif (animSvgElement.parentNode == parent) {\n\t\t\tparent.removeChild(animSvgElement);\n\t\t\tparent.appendChild(svgElement);\n\t\t}\n\t}, REPLACE_ALL_NEW_DUR);\n}\n", "import SvgTip from '../objects/SvgTip';\nimport { $, isElementInViewport, getElementContentWidth, isHidden } from '../utils/dom';\nimport { makeSVGContainer, makeSVGDefs, makeSVGGroup, makeText } from '../utils/draw';\nimport { LEGEND_ITEM_WIDTH } from '../utils/constants';\nimport {\n\tBASE_MEASURES, getExtraHeight, getExtraWidth, getTopOffset, getLeftOffset,\n\tINIT_CHART_UPDATE_TIMEOUT, CHART_POST_ANIMATE_TIMEOUT, DEFAULT_COLORS\n} from '../utils/constants';\nimport { getColor, isValidColor } from '../utils/colors';\nimport { runSMILAnimation } from '../utils/animation';\nimport { downloadFile, prepareForExport } from '../utils/export';\nimport { deepClone } from '../utils/helpers';\n\nexport default class BaseChart {\n\tconstructor(parent, options) {\n\t\toptions = deepClone(options);\n\n\t\tthis.parent = typeof parent === 'string'\n\t\t\t? document.querySelector(parent)\n\t\t\t: parent;\n\n\t\tif (!(this.parent instanceof HTMLElement)) {\n\t\t\tthrow new Error('No `parent` element to render on was provided.');\n\t\t}\n\n\t\tthis.rawChartArgs = options;\n\n\t\tthis.title = options.title || '';\n\t\tthis.type = options.type || '';\n\n\t\tthis.realData = this.prepareData(options.data);\n\t\tthis.data = this.prepareFirstData(this.realData);\n\n\t\tthis.colors = this.validateColors(options.colors, this.type);\n\n\t\tthis.config = {\n\t\t\tshowTooltip: 1, // calculate\n\t\t\tshowLegend: (typeof options.showLegend !== 'undefined') ? options.showLegend : 1,\n\t\t\tisNavigable: options.isNavigable || 0,\n\t\t\tanimate: (typeof options.animate !== 'undefined') ? options.animate : 1,\n\t\t\tdisableEntryAnimation: options.disableEntryAnimation || 0,\n\t\t\ttruncateLegends: options.truncateLegends || 1\n\t\t};\n\n\t\tthis.measures = JSON.parse(JSON.stringify(BASE_MEASURES));\n\t\tlet m = this.measures;\n\t\tthis.setMeasures(options);\n\t\tif (!this.title.length) { m.titleHeight = 0; }\n\t\tif (!this.config.showLegend) m.legendHeight = 0;\n\t\tthis.argHeight = options.height || m.baseHeight;\n\n\t\tthis.state = {};\n\t\tthis.options = {};\n\n\t\tthis.initTimeout = INIT_CHART_UPDATE_TIMEOUT;\n\n\t\tif (this.config.isNavigable) {\n\t\t\tthis.overlays = [];\n\t\t}\n\n\t\tthis.configure(options);\n\t}\n\n\tprepareData(data) {\n\t\treturn data;\n\t}\n\n\tprepareFirstData(data) {\n\t\treturn data;\n\t}\n\n\tvalidateColors(colors, type) {\n\t\tconst validColors = [];\n\t\tcolors = (colors || []).concat(DEFAULT_COLORS[type]);\n\t\tcolors.forEach((string) => {\n\t\t\tconst color = getColor(string);\n\t\t\tif (!isValidColor(color)) {\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\n\t\t\t} else {\n\t\t\t\tvalidColors.push(color);\n\t\t\t}\n\t\t});\n\t\treturn validColors;\n\t}\n\n\tsetMeasures() {\n\t\t// Override measures, including those for title and legend\n\t\t// set config for legend and title\n\t}\n\n\tconfigure() {\n\t\tlet height = this.argHeight;\n\t\tthis.baseHeight = height;\n\t\tthis.height = height - getExtraHeight(this.measures);\n\n\t\t// Bind window events\n\t\tthis.boundDrawFn = () => this.draw(true);\n\t\tif (ResizeObserver) {\n\t\t\tthis.resizeObserver = new ResizeObserver(this.boundDrawFn);\n\t\t\tthis.resizeObserver.observe(this.parent);\n\t\t}\n\t\twindow.addEventListener('resize', this.boundDrawFn);\n\t\twindow.addEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\tdestroy() {\n\t\tif (this.resizeObserver) this.resizeObserver.disconnect();\n\t\twindow.removeEventListener('resize', this.boundDrawFn);\n\t\twindow.removeEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\t// Has to be called manually\n\tsetup() {\n\t\tthis.makeContainer();\n\t\tthis.updateWidth();\n\t\tthis.makeTooltip();\n\n\t\tthis.draw(false, true);\n\t}\n\n\tmakeContainer() {\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\n\t\tlet args = {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'chart-container'\n\t\t};\n\n\t\tif (this.independentWidth) {\n\t\t\targs.styles = { width: this.independentWidth + 'px' };\n\t\t}\n\n\t\tthis.container = $.create('div', args);\n\t}\n\n\tmakeTooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.container,\n\t\t\tcolors: this.colors\n\t\t});\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() { }\n\n\tdraw(onlyWidthChange = false, init = false) {\n\t\tif (onlyWidthChange && isHidden(this.parent)) {\n\t\t\t// Don't update anything if the chart is hidden\n\t\t\treturn;\n\t\t}\n\t\tthis.updateWidth();\n\n\t\tthis.calc(onlyWidthChange);\n\t\tthis.makeChartArea();\n\t\tthis.setupComponents();\n\n\t\tthis.components.forEach(c => c.setup(this.drawArea));\n\t\t// this.components.forEach(c => c.make());\n\t\tthis.render(this.components, false);\n\n\t\tif (init) {\n\t\t\tthis.data = this.realData;\n\t\t\tsetTimeout(() => { this.update(this.data, true); }, this.initTimeout);\n\t\t}\n\t\t\n\t\tif (this.config.showLegend) {\n\t\t\tthis.renderLegend();\n\t\t}\n\n\t\tthis.setupNavigation(init);\n\t}\n\n\tcalc() { } // builds state\n\n\tupdateWidth() {\n\t\tthis.baseWidth = getElementContentWidth(this.parent);\n\t\tthis.width = this.baseWidth - getExtraWidth(this.measures);\n\t}\n\n\tmakeChartArea() {\n\t\tif (this.svg) {\n\t\t\tthis.container.removeChild(this.svg);\n\t\t}\n\t\tlet m = this.measures;\n\n\t\tthis.svg = makeSVGContainer(\n\t\t\tthis.container,\n\t\t\t'frappe-chart chart',\n\t\t\tthis.baseWidth,\n\t\t\tthis.baseHeight\n\t\t);\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\n\n\t\tif (this.title.length) {\n\t\t\tthis.titleEL = makeText(\n\t\t\t\t'title',\n\t\t\t\tm.margins.left,\n\t\t\t\tm.margins.top,\n\t\t\t\tthis.title,\n\t\t\t\t{\n\t\t\t\t\tfontSize: m.titleFontSize,\n\t\t\t\t\tfill: '#666666',\n\t\t\t\t\tdy: m.titleFontSize\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tlet top = getTopOffset(m);\n\t\tthis.drawArea = makeSVGGroup(\n\t\t\tthis.type + '-chart chart-draw-area',\n\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t);\n\n\t\tif (this.config.showLegend) {\n\t\t\ttop += this.height + m.paddings.bottom;\n\t\t\tthis.legendArea = makeSVGGroup(\n\t\t\t\t'chart-legend',\n\t\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t\t);\n\t\t}\n\n\t\tif (this.title.length) { this.svg.appendChild(this.titleEL); }\n\t\tthis.svg.appendChild(this.drawArea);\n\t\tif (this.config.showLegend) { this.svg.appendChild(this.legendArea); }\n\n\t\tthis.updateTipOffset(getLeftOffset(m), getTopOffset(m));\n\t}\n\n\tupdateTipOffset(x, y) {\n\t\tthis.tip.offset = {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tsetupComponents() { this.components = new Map(); }\n\n\tupdate(data, drawing = false) {\n\t\tif (!data) console.error('No data to update.');\n\t\tif (!drawing) data = deepClone(data);\n\t\tconst animate = drawing ? !this.config.disableEntryAnimation : this.config.animate;\n\t\t\n\t\tthis.data = this.prepareData(data);\n\t\tthis.calc(); // builds state\n\t\tthis.render(this.components, animate);\n\t}\n\n\trender(components = this.components, animate = true) {\n\t\tif (this.config.isNavigable) {\n\t\t\t// Remove all existing overlays\n\t\t\tthis.overlays.map(o => o.parentNode.removeChild(o));\n\t\t\t// ref.parentNode.insertBefore(element, ref);\n\t\t}\n\t\tlet elementsToAnimate = [];\n\t\t// Can decouple to this.refreshComponents() first to save animation timeout\n\t\tcomponents.forEach(c => {\n\t\t\telementsToAnimate = elementsToAnimate.concat(c.update(animate));\n\t\t});\n\t\tif (elementsToAnimate.length > 0) {\n\t\t\trunSMILAnimation(this.container, this.svg, elementsToAnimate);\n\t\t\tsetTimeout(() => {\n\t\t\t\tcomponents.forEach(c => c.make());\n\t\t\t\tthis.updateNav();\n\t\t\t}, CHART_POST_ANIMATE_TIMEOUT);\n\t\t} else {\n\t\t\tcomponents.forEach(c => c.make());\n\t\t\tthis.updateNav();\n\t\t}\n\t}\n\n\tupdateNav() {\n\t\tif (this.config.isNavigable) {\n\t\t\tthis.makeOverlay();\n\t\t\tthis.bindUnits();\n\t\t}\n\t}\n\n\trenderLegend(dataset) {\n\t\tthis.legendArea.textContent = '';\n\t\tlet count = 0;\n\t\tlet y = 0;\n\n\t\tdataset.map((data, index) => {\n\t\t\tlet divisor = Math.floor(this.width / LEGEND_ITEM_WIDTH);\n\t\t\tif (count > divisor) {\n\t\t\t\tcount = 0;\n\t\t\t\ty += this.config.legendRowHeight;\n\t\t\t}\n\t\t\tlet x = LEGEND_ITEM_WIDTH * count;\n\t\t\tlet dot = this.makeLegend(data, index, x, y);\n\t\t\tthis.legendArea.appendChild(dot);\n\t\t\tcount++;\n\t\t});\n\t}\n\n\tmakeLegend() { }\n\n\n\tsetupNavigation(init = false) {\n\t\tif (!this.config.isNavigable) return;\n\n\t\tif (init) {\n\t\t\tthis.bindOverlay();\n\n\t\t\tthis.keyActions = {\n\t\t\t\t'13': this.onEnterKey.bind(this),\n\t\t\t\t'37': this.onLeftArrow.bind(this),\n\t\t\t\t'38': this.onUpArrow.bind(this),\n\t\t\t\t'39': this.onRightArrow.bind(this),\n\t\t\t\t'40': this.onDownArrow.bind(this),\n\t\t\t};\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif (isElementInViewport(this.container)) {\n\t\t\t\t\te = e || window.event;\n\t\t\t\t\tif (this.keyActions[e.keyCode]) {\n\t\t\t\t\t\tthis.keyActions[e.keyCode]();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlay() { }\n\tupdateOverlay() { }\n\tbindOverlay() { }\n\tbindUnits() { }\n\n\tonLeftArrow() { }\n\tonRightArrow() { }\n\tonUpArrow() { }\n\tonDownArrow() { }\n\tonEnterKey() { }\n\n\taddDataPoint() { }\n\tremoveDataPoint() { }\n\n\tgetDataPoint() { }\n\tsetCurrentDataPoint() { }\n\n\tupdateDataset() { }\n\n\texport() {\n\t\tlet chartSvg = prepareForExport(this.svg);\n\t\tdownloadFile(this.title || 'Chart', [chartSvg]);\n\t}\n}\n", "import { $ } from '../utils/dom';\nimport { CSSTEXT } from '../../css/chartsCss';\n\nexport function downloadFile(filename, data) {\n\tvar a = document.createElement('a');\n\ta.style = \"display: none\";\n\tvar blob = new Blob(data, { type: \"image/svg+xml; charset=utf-8\" });\n\tvar url = window.URL.createObjectURL(blob);\n\ta.href = url;\n\ta.download = filename;\n\tdocument.body.appendChild(a);\n\ta.click();\n\tsetTimeout(function () {\n\t\tdocument.body.removeChild(a);\n\t\twindow.URL.revokeObjectURL(url);\n\t}, 300);\n}\n\nexport function prepareForExport(svg) {\n\tlet clone = svg.cloneNode(true);\n\tclone.classList.add('chart-container');\n\tclone.setAttribute('xmlns', \"http://www.w3.org/2000/svg\");\n\tclone.setAttribute('xmlns:xlink', \"http://www.w3.org/1999/xlink\");\n\tlet styleEl = $.create('style', {\n\t\t'innerHTML': CSSTEXT\n\t});\n\tclone.insertBefore(styleEl, clone.firstChild);\n\n\tlet container = $.create('div');\n\tcontainer.appendChild(clone);\n\n\treturn container.innerHTML;\n}\n", "export const CSSTEXT = \".chart-container{position:relative;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif}.chart-container .axis,.chart-container .chart-label{fill:#555b51}.chart-container .axis line,.chart-container .chart-label line{stroke:#dadada}.chart-container .dataset-units circle{stroke:#fff;stroke-width:2}.chart-container .dataset-units path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container .dataset-path{stroke-width:2px}.chart-container .path-group path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container line.dashed{stroke-dasharray:5,3}.chart-container .axis-line .specific-value{text-anchor:start}.chart-container .axis-line .y-line{text-anchor:end}.chart-container .axis-line .x-line{text-anchor:middle}.chart-container .legend-dataset-text{fill:#6c7680;font-weight:600}.graph-svg-tip{position:absolute;z-index:99999;padding:10px;font-size:12px;color:#959da5;text-align:center;background:rgba(0,0,0,.8);border-radius:3px}.graph-svg-tip ul{padding-left:0;display:flex}.graph-svg-tip ol{padding-left:0;display:flex}.graph-svg-tip ul.data-point-list li{min-width:90px;flex:1;font-weight:600}.graph-svg-tip strong{color:#dfe2e5;font-weight:600}.graph-svg-tip .svg-pointer{position:absolute;height:5px;margin:0 0 0 -5px;content:' ';border:5px solid transparent;}.graph-svg-tip.comparison{padding:0;text-align:left;pointer-events:none}.graph-svg-tip.comparison .title{display:block;padding:10px;margin:0;font-weight:600;line-height:1;pointer-events:none}.graph-svg-tip.comparison ul{margin:0;white-space:nowrap;list-style:none}.graph-svg-tip.comparison li{display:inline-block;padding:5px 10px}\";", "import BaseChart from './BaseChart';\nimport { legendDot } from '../utils/draw';\nimport { round } from '../utils/helpers';\n\nexport default class AggregationChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\n\t\tthis.config.formatTooltipY = (args.tooltipOptions || {}).formatTooltipY;\n\t\tthis.config.maxSlices = args.maxSlices || 20;\n\t\tthis.config.maxLegendPoints = args.maxLegendPoints || 20;\n\t\tthis.config.legendRowHeight = 60;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\t\tlet maxSlices = this.config.maxSlices;\n\t\ts.sliceTotals = [];\n\n\t\tlet allTotals = this.data.labels.map((label, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, label];\n\t\t}).filter(d => { return d[0] >= 0; }); // keep only positive results\n\n\t\tlet totals = allTotals;\n\t\tif (allTotals.length > maxSlices) {\n\t\t\t// Prune and keep a grey area for rest as per maxSlices\n\t\t\tallTotals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = allTotals.slice(0, maxSlices - 1);\n\t\t\tlet remaining = allTotals.slice(maxSlices - 1);\n\n\t\t\tlet sumOfRemaining = 0;\n\t\t\tremaining.map(d => { sumOfRemaining += d[0]; });\n\t\t\ttotals.push([sumOfRemaining, 'Rest']);\n\t\t\tthis.colors[maxSlices - 1] = 'grey';\n\t\t}\n\n\t\ts.labels = [];\n\t\ttotals.map(d => {\n\t\t\ts.sliceTotals.push(round(d[0]));\n\t\t\ts.labels.push(d[1]);\n\t\t});\n\n\t\ts.grandTotal = s.sliceTotals.reduce((a, b) => a + b, 0);\n\n\t\tthis.center = {\n\t\t\tx: this.width / 2,\n\t\t\ty: this.height / 2\n\t\t};\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.state;\n\t\tthis.legendArea.textContent = '';\n\t\tthis.legendTotals = s.sliceTotals.slice(0, this.config.maxLegendPoints);\n\t\tsuper.renderLegend(this.legendTotals);\n\t}\n\n\tmakeLegend(data, index, x_pos, y_pos) {\n\t\tlet formatted = this.config.formatTooltipY ? this.config.formatTooltipY(data) : data;\n\n\t\treturn legendDot(\n\t\t\tx_pos,\n\t\t\ty_pos,\n\t\t\t12, // size\n\t\t\t3, // dot radius\n\t\t\tthis.colors[index], // fill\n\t\t\tthis.state.labels[index], // label\n\t\t\tformatted, // value\n\t\t\tnull, // base_font_size\n\t\t\tthis.config.truncateLegends // truncate_legends\n\t\t);\n\t}\n}\n", "// Playing around with dates\n\nexport const NO_OF_YEAR_MONTHS = 12;\nexport const NO_OF_DAYS_IN_WEEK = 7;\nexport const DAYS_IN_YEAR = 375;\nexport const NO_OF_MILLIS = 1000;\nexport const SEC_IN_DAY = 86400;\n\nexport const MONTH_NAMES = [\"January\", \"February\", \"March\", \"April\", \"May\",\n\t\"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nexport const MONTH_NAMES_SHORT = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n\t\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nexport const DAY_NAMES_SHORT = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nexport const DAY_NAMES = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\n\t\"Thursday\", \"Friday\", \"Saturday\"];\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(date) {\n\tlet result = new Date(date);\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\treturn result;\n}\n\nexport function getYyyyMmDd(date) {\n\tlet dd = date.getDate();\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\treturn [\n\t\tdate.getFullYear(),\n\t\t(mm > 9 ? '' : '0') + mm,\n\t\t(dd > 9 ? '' : '0') + dd\n\t].join('-');\n}\n\nexport function clone(date) {\n\treturn new Date(date.getTime());\n}\n\nexport function timestampSec(date) {\n\treturn date.getTime() / NO_OF_MILLIS;\n}\n\nexport function timestampToMidnight(timestamp, roundAhead = false) {\n\tlet midnightTs = Math.floor(timestamp - (timestamp % SEC_IN_DAY));\n\tif (roundAhead) {\n\t\treturn midnightTs + SEC_IN_DAY;\n\t}\n\treturn midnightTs;\n}\n\n// export function getMonthsBetween(startDate, endDate) {}\n\nexport function getWeeksBetween(startDate, endDate) {\n\tlet weekStartDate = setDayToSunday(startDate);\n\treturn Math.ceil(getDaysBetween(weekStartDate, endDate) / NO_OF_DAYS_IN_WEEK);\n}\n\nexport function getDaysBetween(startDate, endDate) {\n\tlet millisecondsPerDay = SEC_IN_DAY * NO_OF_MILLIS;\n\treturn (treatAsUtc(endDate) - treatAsUtc(startDate)) / millisecondsPerDay;\n}\n\nexport function areInSameMonth(startDate, endDate) {\n\treturn startDate.getMonth() === endDate.getMonth()\n\t\t&& startDate.getFullYear() === endDate.getFullYear();\n}\n\nexport function getMonthName(i, short = false) {\n\tlet monthName = MONTH_NAMES[i];\n\treturn short ? monthName.slice(0, 3) : monthName;\n}\n\nexport function getLastDateInMonth(month, year) {\n\treturn new Date(year, month + 1, 0); // 0: last day in previous month\n}\n\n// mutates\nexport function setDayToSunday(date) {\n\tlet newDate = clone(date);\n\tconst day = newDate.getDay();\n\tif (day !== 0) {\n\t\taddDays(newDate, (-1) * day);\n\t}\n\treturn newDate;\n}\n\n// mutates\nexport function addDays(date, numberOfDays) {\n\tdate.setDate(date.getDate() + numberOfDays);\n}\n", "import { makeSVGGroup } from '../utils/draw';\nimport { makeText, makePath, xLine, yLine, yMarker, yRegion, datasetBar, datasetDot, percentageBar, getPaths, heatSquare } from '../utils/draw';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\nimport {\n\ttranslateHoriLine, translateVertLine, animateRegion, animateBar,\n\tanimateDot, animatePath, animatePathStr\n} from '../utils/animate';\nimport { getMonthName } from '../utils/date-utils';\n\nclass ChartComponent {\n\tconstructor({\n\t\tlayerClass = '',\n\t\tlayerTransform = '',\n\t\tconstants,\n\n\t\tgetData,\n\t\tmakeElements,\n\t\tanimateElements\n\t}) {\n\t\tthis.layerTransform = layerTransform;\n\t\tthis.constants = constants;\n\n\t\tthis.makeElements = makeElements;\n\t\tthis.getData = getData;\n\n\t\tthis.animateElements = animateElements;\n\n\t\tthis.store = [];\n\t\tthis.labels = [];\n\n\t\tthis.layerClass = layerClass;\n\t\tthis.layerClass = typeof (this.layerClass) === 'function'\n\t\t\t? this.layerClass() : this.layerClass;\n\n\t\tthis.refresh();\n\t}\n\n\trefresh(data) {\n\t\tthis.data = data || this.getData();\n\t}\n\n\tsetup(parent) {\n\t\tthis.layer = makeSVGGroup(this.layerClass, this.layerTransform, parent);\n\t}\n\n\tmake() {\n\t\tthis.render(this.data);\n\t\tthis.oldData = this.data;\n\t}\n\n\trender(data) {\n\t\tthis.store = this.makeElements(data);\n\n\t\tthis.layer.textContent = '';\n\t\tthis.store.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t\tthis.labels.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t}\n\n\tupdate(animate = true) {\n\t\tthis.refresh();\n\t\tlet animateElements = [];\n\t\tif (animate) {\n\t\t\tanimateElements = this.animateElements(this.data) || [];\n\t\t}\n\t\treturn animateElements;\n\t}\n}\n\nlet componentConfigs = {\n\tdonutSlices: {\n\t\tlayerClass: 'donut-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) => {\n\t\t\t\tlet slice = makePath(s, 'donut-path', data.colors[i], 'none', data.strokeWidth);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) => animatePathStr(slice, newData.sliceStrings[i]));\n\t\t},\n\t},\n\tpieSlices: {\n\t\tlayerClass: 'pie-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) => {\n\t\t\t\tlet slice = makePath(s, 'pie-path', 'none', data.colors[i]);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) =>\n\t\t\t\tanimatePathStr(slice, newData.sliceStrings[i])\n\t\t\t);\n\t\t}\n\t},\n\tpercentageBars: {\n\t\tlayerClass: 'percentage-bars',\n\t\tmakeElements(data) {\n\t\t\tconst numberOfPoints = data.xPositions.length;\n\t\t\treturn data.xPositions.map((x, i) => {\n\t\t\t\tlet y = 0;\n\n\t\t\t\tlet isLast = i == numberOfPoints - 1;\n\t\t\t\tlet isFirst = i == 0;\n\n\t\t\t\tlet bar = percentageBar(x, y, data.widths[i], this.constants.barHeight, isFirst, isLast, data.colors[i]);\n\t\t\t\treturn bar;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif (newData) return [];\n\t\t}\n\t},\n\tyAxis: {\n\t\tlayerClass: 'y axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\tyLine(position, data.labels[i], this.constants.width,\n\t\t\t\t\t{\n\t\t\t\t\t\tmode: this.constants.mode,\n\t\t\t\t\t\tpos: this.constants.pos,\n\t\t\t\t\t\tshortenNumbers: this.constants.shortenNumbers,\n\t\t\t\t\t\tnumberFormatter: this.constants.numberFormatter\n\t\t\t\t\t})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\txAxis: {\n\t\tlayerClass: 'x axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\txLine(position, data.calcLabels[i], this.constants.height,\n\t\t\t\t\t{ mode: this.constants.mode, pos: this.constants.pos })\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.calcLabels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.calcLabels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tcalcLabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateVertLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyMarkers: {\n\t\tlayerClass: 'y-markers',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(m =>\n\t\t\t\tyMarker(m.position, m.label, this.constants.width,\n\t\t\t\t\t{ labelPos: m.options.labelPos, stroke: m.options.stroke, mode: 'span', lineType: m.options.lineType })\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.position);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.position);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyRegions: {\n\t\tlayerClass: 'y-regions',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(r =>\n\t\t\t\tyRegion(r.startPos, r.endPos, this.constants.width,\n\t\t\t\t\tr.label, { labelPos: r.options.labelPos, stroke: r.options.stroke, fill: r.options.fill })\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.endPos);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newStarts = newData.map(d => d.startPos);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.endPos);\n\t\t\tlet oldStarts = this.oldData.map(d => d.startPos);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tstartPos: oldStarts[i],\n\t\t\t\t\tendPos: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((rectGroup, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\theatDomain: {\n\t\tlayerClass: function () { return 'heat-domain domain-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet { index, colWidth, rowHeight, squareSize, radius, xTranslate } = this.constants;\n\t\t\tlet monthNameHeight = -12;\n\t\t\tlet x = xTranslate, y = 0;\n\n\t\t\tthis.serializedSubDomains = [];\n\n\t\t\tdata.cols.map((week, weekNo) => {\n\t\t\t\tif (weekNo === 1) {\n\t\t\t\t\tthis.labels.push(\n\t\t\t\t\t\tmakeText('domain-name', x, monthNameHeight, getMonthName(index, true).toUpperCase(),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfontSize: 9\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tweek.map((day, i) => {\n\t\t\t\t\tif (day.fill) {\n\t\t\t\t\t\tlet data = {\n\t\t\t\t\t\t\t'data-date': day.yyyyMmDd,\n\t\t\t\t\t\t\t'data-value': day.dataValue,\n\t\t\t\t\t\t\t'data-day': i\n\t\t\t\t\t\t};\n\t\t\t\t\t\tlet square = heatSquare('day', x, y, squareSize, radius, day.fill, data);\n\t\t\t\t\t\tthis.serializedSubDomains.push(square);\n\t\t\t\t\t}\n\t\t\t\t\ty += rowHeight;\n\t\t\t\t});\n\t\t\t\ty = 0;\n\t\t\t\tx += colWidth;\n\t\t\t});\n\n\t\t\treturn this.serializedSubDomains;\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif (newData) return [];\n\t\t}\n\t},\n\n\tbarGraph: {\n\t\tlayerClass: function () { return 'dataset-units dataset-bars dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'bar';\n\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\treturn datasetBar(\n\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\ty,\n\t\t\t\t\tdata.barWidth,\n\t\t\t\t\tc.color,\n\t\t\t\t\tdata.labels[j],\n\t\t\t\t\tj,\n\t\t\t\t\tdata.offsets[j],\n\t\t\t\t\t{\n\t\t\t\t\t\tzeroLine: data.zeroLine,\n\t\t\t\t\t\tbarsWidth: data.barsWidth,\n\t\t\t\t\t\tminHeight: c.minHeight\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t\treturn this.units;\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newOffsets = newData.offsets;\n\t\t\tlet newLabels = newData.labels;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldOffsets = this.oldData.offsets;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldOffsets, newOffsets] = equilizeNoOfElements(oldOffsets, newOffsets);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\toffsets: oldOffsets,\n\t\t\t\tlabels: newLabels,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tbarsWidth: this.oldData.barsWidth,\n\t\t\t\tbarWidth: this.oldData.barWidth,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((bar, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateBar(\n\t\t\t\t\tbar, newXPos[i], newYPos[i], newData.barWidth, newOffsets[i],\n\t\t\t\t\t{ zeroLine: newData.zeroLine }\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tlineGraph: {\n\t\tlayerClass: function () { return 'dataset-units dataset-line dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'dot';\n\t\t\tthis.paths = {};\n\t\t\tif (!c.hideLine) {\n\t\t\t\tthis.paths = getPaths(\n\t\t\t\t\tdata.xPositions,\n\t\t\t\t\tdata.yPositions,\n\t\t\t\t\tc.color,\n\t\t\t\t\t{\n\t\t\t\t\t\theatline: c.heatline,\n\t\t\t\t\t\tregionFill: c.regionFill,\n\t\t\t\t\t\tspline: c.spline\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsvgDefs: c.svgDefs,\n\t\t\t\t\t\tzeroLine: data.zeroLine\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t\t\t\tthis.units = [];\n\t\t\tif (c.showDots) {\n\t\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\t\treturn datasetDot(\n\t\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\tc.color,\n\t\t\t\t\t\t(c.valuesOverPoints ? data.values[j] : ''),\n\t\t\t\t\t\tj,\n\t\t\t\t\t\tc.hideDotBorder\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (c.trailingDot && !c.showDots) {\n\t\t\t\tconst lastIndex = data.yPositions.length - 1;\n\t\t\t\tconst dot = datasetDot(\n\t\t\t\t\tdata.xPositions[lastIndex],\n\t\t\t\t\tdata.yPositions[lastIndex],\n\t\t\t\t\tdata.radius,\n\t\t\t\t\tc.color,\n\t\t\t\t\t(c.valuesOverPoints ? data.values[lastIndex] : ''),\n\t\t\t\t\tlastIndex,\n\t\t\t\t\tc.hideDotBorder\n\t\t\t\t);\n\n\t\t\t\tthis.units.push(dot);\n\t\t\t}\n\n\t\t\treturn Object.values(this.paths).concat(this.units);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newValues = newData.values;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldValues = this.oldData.values;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldValues, newValues] = equilizeNoOfElements(oldValues, newValues);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\tvalues: newValues,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tradius: this.oldData.radius,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tif (Object.keys(this.paths).length) {\n\t\t\t\tanimateElements = animateElements.concat(animatePath(\n\t\t\t\t\tthis.paths, newXPos, newYPos, newData.zeroLine, this.constants.spline));\n\t\t\t}\n\n\t\t\tif (this.units.length) {\n\t\t\t\tthis.units.map((dot, i) => {\n\t\t\t\t\tanimateElements = animateElements.concat(animateDot(\n\t\t\t\t\t\tdot, newXPos[i], newYPos[i]));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn animateElements;\n\t\t}\n\t}\n};\n\nexport function getComponent(name, constants, getData) {\n\tlet keys = Object.keys(componentConfigs).filter(k => name.includes(k));\n\tlet config = componentConfigs[keys[0]];\n\tObject.assign(config, {\n\t\tconstants: constants,\n\t\tgetData: getData\n\t});\n\treturn new ChartComponent(config);\n}\n", "import AggregationChart from './AggregationChart';\nimport { getOffset } from '../utils/dom';\nimport { getComponent } from '../objects/ChartComponents';\nimport { PERCENTAGE_BAR_DEFAULT_HEIGHT, getExtraHeight } from '../utils/constants';\n\nexport default class PercentageChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'percentage';\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.barOptions = options.barOptions || {};\n\n\t\tlet b = this.barOptions;\n\t\tb.height = b.height || PERCENTAGE_BAR_DEFAULT_HEIGHT;\n\n\t\tm.paddings.right = 30;\n\t\tm.paddings.top = 60;\n\t\tm.paddings.bottom = 0;\n\n\t\tm.legendHeight = 80;\n\t\tm.baseHeight = (b.height) * 8 + getExtraHeight(m);\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'percentageBars',\n\t\t\t\t{\n\t\t\t\t\tbarHeight: this.barOptions.height,\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xPositions,\n\t\t\t\t\t\twidths: s.widths,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\n\t\ts.xPositions = [];\n\t\ts.widths = [];\n\n\t\tlet xPos = 0;\n\t\ts.sliceTotals.map((value) => {\n\t\t\tlet width = this.width * value / s.grandTotal;\n\t\t\ts.widths.push(width);\n\t\t\ts.xPositions.push(xPos);\n\t\t\txPos += width;\n\t\t});\n\t}\n\n\tmakeDataByIndex() { }\n\n\tbindTooltip() {\n\t\tlet s = this.state;\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet bars = this.components.get('percentageBars').store;\n\t\t\tlet bar = e.target;\n\t\t\tif (bars.includes(bar)) {\n\t\t\t\tlet i = bars.indexOf(bar);\n\t\t\t\tlet gOff = getOffset(this.container), pOff = getOffset(bar);\n\n\t\t\t\tlet width = bar.getAttribute('width') || bar.getBoundingClientRect().width;\n\n\t\t\t\tlet x = pOff.left - gOff.left + parseInt(width) / 2;\n\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\tlet title = (this.formattedLabels && this.formattedLabels.length > 0\n\t\t\t\t\t? this.formattedLabels[i] : this.state.labels[i]) + ': ';\n\t\t\t\tlet fraction = s.sliceTotals[i] / s.grandTotal;\n\n\t\t\t\tthis.tip.setValues(x, y, { name: title, value: (fraction * 100).toFixed(1) + \"%\" });\n\t\t\t\tthis.tip.showTip();\n\t\t\t}\n\t\t});\n\t}\n}\n", "import AggregationChart from './AggregationChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset } from '../utils/dom';\nimport { getPositionByAngle } from '../utils/helpers';\nimport { makeArcPathStr, makeCircleStr } from '../utils/draw';\nimport { transform } from '../utils/animation';\nimport { FULL_ANGLE } from '../utils/constants';\n\nexport default class PieChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.type = 'pie';\n\t\tthis.sliceName = 'pieSlices';\n\n\t\tthis.arcFunc = makeArcPathStr;\n\t\tthis.shapeFunc = makeCircleStr;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t}\n\n\tgetRadius() {\n\t\treturn this.height > this.width ? this.center.x : this.center.y;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\t\tthis.radius = this.getRadius();\n\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1 : 0;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart, curEnd;\n\t\t\tif (this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath =\n\t\t\t\toriginDiffAngle === 360\n\t\t\t\t\t? this.shapeFunc(curStart, curEnd, this.center, this.radius, clockWise, largeArc)\n\t\t\t\t\t: this.arcFunc(curStart, curEnd, this.center, this.radius, clockWise, largeArc);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'pieSlices',\n\t\t\t\t{},\n\t\t\t\tfunction () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property) {\n\t\tconst { radius, hoverRadio } = this;\n\t\tconst position = getPositionByAngle(property.startAngle + (property.angle / 2), radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path, i, flag, e) {\n\t\tif (!path) return;\n\t\tconst color = this.colors[i];\n\t\tif (flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\t// path.style.fill = lightenDarkenColor(color, 50);\n\t\t\t// path.style.stroke = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, { name: title, value: percent + \"%\" });\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\tthis.resetHover(path, color)\n\t\t}\n\t}\n\n\tresetHover(path, color) {\n\t\ttransform(path, 'translate3d(0,0,0)');\n\t\tthis.tip.hideTip();\n\t\tpath.style.fill = color;\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e) {\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get(this.sliceName).store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevActive = this.curActiveSlice;\n\t\tif (slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevActive, prevIndex, false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave() {\n\t\tthis.hoverSlice(this.curActiveSlice, this.curActiveSliceIndex, false);\n\t}\n}\n", "import { floatTwo } from './helpers';\n\nfunction normalize(x) {\n\t// Calculates mantissa and exponent of a number\n\t// Returns normalized number and exponent\n\t// https://stackoverflow.com/q/9383593/6495043\n\n\tif (x === 0) {\n\t\treturn [0, 0];\n\t}\n\tif (isNaN(x)) {\n\t\treturn { mantissa: -6755399441055744, exponent: 972 };\n\t}\n\tvar sig = x > 0 ? 1 : -1;\n\tif (!isFinite(x)) {\n\t\treturn { mantissa: sig * 4503599627370496, exponent: 972 };\n\t}\n\n\tx = Math.abs(x);\n\tvar exp = Math.floor(Math.log10(x));\n\tvar man = x / Math.pow(10, exp);\n\n\treturn [sig * man, exp];\n}\n\nfunction getChartRangeIntervals(max, min = 0) {\n\tlet upperBound = Math.ceil(max);\n\tlet lowerBound = Math.floor(min);\n\tlet range = upperBound - lowerBound;\n\n\tlet noOfParts = range;\n\tlet partSize = 1;\n\n\t// To avoid too many partitions\n\tif (range > 5) {\n\t\tif (range % 2 !== 0) {\n\t\t\tupperBound++;\n\t\t\t// Recalc range\n\t\t\trange = upperBound - lowerBound;\n\t\t}\n\t\tnoOfParts = range / 2;\n\t\tpartSize = 2;\n\t}\n\n\t// Special case: 1 and 2\n\tif (range <= 2) {\n\t\tnoOfParts = 4;\n\t\tpartSize = range / noOfParts;\n\t}\n\n\t// Special case: 0\n\tif (range === 0) {\n\t\tnoOfParts = 5;\n\t\tpartSize = 1;\n\t}\n\n\tlet intervals = [];\n\tfor (var i = 0; i <= noOfParts; i++) {\n\t\tintervals.push(lowerBound + partSize * i);\n\t}\n\treturn intervals;\n}\n\nfunction getChartIntervals(maxValue, minValue = 0) {\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\n\tlet normalMinValue = minValue ? minValue / Math.pow(10, exponent) : 0;\n\n\t// Allow only 7 significant digits\n\tnormalMaxValue = normalMaxValue.toFixed(6);\n\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\n\tintervals = intervals.map(value => value * Math.pow(10, exponent));\n\treturn intervals;\n}\n\nexport function calcChartIntervals(values, withMinimum = false, range = {}) {\n\t//*** Where the magic happens ***\n\n\t// Calculates best-fit y intervals from given values\n\t// and returns the interval array\n\n\tlet maxValue = Math.max(...values);\n\tlet minValue = Math.min(...values);\n\n\tif (range.max !== undefined) {\n\t\tmaxValue = maxValue > range.max ? maxValue : range.max;\n\t}\n\t\n\tif (range.min !== undefined) {\n\t\tminValue = minValue < range.min ? minValue : range.min;\n\t}\n\n\t// Exponent to be used for pretty print\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\n\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\n\t\tlet intervals = getChartIntervals(maxValue);\n\n\t\tlet intervalSize = intervals[1] - intervals[0];\n\n\t\t// Then unshift the negative values\n\t\tlet value = 0;\n\t\tfor (var i = 1; value < absMinValue; i++) {\n\t\t\tvalue += intervalSize;\n\t\t\tintervals.unshift((-1) * value);\n\t\t}\n\t\treturn intervals;\n\t}\n\n\t// CASE I: Both non-negative\n\n\tif (maxValue >= 0 && minValue >= 0) {\n\t\texponent = normalize(maxValue)[1];\n\t\tif (!withMinimum) {\n\t\t\tintervals = getChartIntervals(maxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\n\t\t}\n\t}\n\n\t// CASE II: Only minValue negative\n\n\telse if (maxValue > 0 && minValue < 0) {\n\t\t// `withMinimum` irrelevant in this case,\n\t\t// We'll be handling both sides of zero separately\n\t\t// (both starting from zero)\n\t\t// Because ceil() and floor() behave differently\n\t\t// in those two regions\n\n\t\tlet absMinValue = Math.abs(minValue);\n\n\t\tif (maxValue >= absMinValue) {\n\t\t\texponent = normalize(maxValue)[1];\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\n\t\t} else {\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\n\t\t\texponent = normalize(absMinValue)[1];\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n\t\t\tintervals = posIntervals.reverse().map(d => d * (-1));\n\t\t}\n\n\t}\n\n\t// CASE III: Both non-positive\n\n\telse if (maxValue <= 0 && minValue <= 0) {\n\t\t// Mirrored Case I:\n\t\t// Work with positives, then reverse the sign and array\n\n\t\tlet pseudoMaxValue = Math.abs(minValue);\n\t\tlet pseudoMinValue = Math.abs(maxValue);\n\n\t\texponent = normalize(pseudoMaxValue)[1];\n\t\tif (!withMinimum) {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\n\t\t}\n\n\t\tintervals = intervals.reverse().map(d => d * (-1));\n\t}\n\n\treturn intervals;\n}\n\nexport function getZeroIndex(yPts) {\n\tlet zeroIndex;\n\tlet interval = getIntervalSize(yPts);\n\tif (yPts.indexOf(0) >= 0) {\n\t\t// the range has a given zero\n\t\t// zero-line on the chart\n\t\tzeroIndex = yPts.indexOf(0);\n\t} else if (yPts[0] > 0) {\n\t\t// Minimum value is positive\n\t\t// zero-line is off the chart: below\n\t\tlet min = yPts[0];\n\t\tzeroIndex = (-1) * min / interval;\n\t} else {\n\t\t// Maximum value is negative\n\t\t// zero-line is off the chart: above\n\t\tlet max = yPts[yPts.length - 1];\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\n\t}\n\treturn zeroIndex;\n}\n\nexport function getRealIntervals(max, noOfIntervals, min = 0, asc = 1) {\n\tlet range = max - min;\n\tlet part = range * 1.0 / noOfIntervals;\n\tlet intervals = [];\n\n\tfor (var i = 0; i <= noOfIntervals; i++) {\n\t\tintervals.push(min + part * i);\n\t}\n\n\treturn asc ? intervals : intervals.reverse();\n}\n\nexport function getIntervalSize(orderedArray) {\n\treturn orderedArray[1] - orderedArray[0];\n}\n\nexport function getValueRange(orderedArray) {\n\treturn orderedArray[orderedArray.length - 1] - orderedArray[0];\n}\n\nexport function scale(val, yAxis) {\n\treturn floatTwo(yAxis.zeroLine - val * yAxis.scaleMultiplier);\n}\n\nexport function isInRange(val, min, max) {\n\treturn val > min && val < max;\n}\n\nexport function isInRange2D(coord, minCoord, maxCoord) {\n\treturn isInRange(coord[0], minCoord[0], maxCoord[0])\n\t\t&& isInRange(coord[1], minCoord[1], maxCoord[1]);\n}\n\nexport function getClosestInArray(goal, arr, index = false) {\n\tlet closest = arr.reduce(function (prev, curr) {\n\t\treturn (Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev);\n\t}, []);\n\n\treturn index ? arr.indexOf(closest) : closest;\n}\n\nexport function calcDistribution(values, distributionSize) {\n\t// Assume non-negative values,\n\t// implying distribution minimum at zero\n\n\tlet dataMaxValue = Math.max(...values);\n\n\tlet distributionStep = 1 / (distributionSize - 1);\n\tlet distribution = [];\n\n\tfor (var i = 0; i < distributionSize; i++) {\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\n\t\tdistribution.push(checkpoint);\n\t}\n\n\treturn distribution;\n}\n\nexport function getMaxCheckpoint(value, distribution) {\n\treturn distribution.filter(d => d < value).length;\n}\n", "import BaseChart from './BaseChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { makeText, heatSquare } from '../utils/draw';\nimport {\n\tDAY_NAMES_SHORT, addDays, areInSameMonth, getLastDateInMonth, setDayToSunday, getYyyyMmDd, getWeeksBetween, getMonthName, clone,\n\tNO_OF_MILLIS, NO_OF_YEAR_MONTHS, NO_OF_DAYS_IN_WEEK\n} from '../utils/date-utils';\nimport { calcDistribution, getMaxCheckpoint } from '../utils/intervals';\nimport {\n\tgetExtraHeight, getExtraWidth, HEATMAP_DISTRIBUTION_SIZE, HEATMAP_SQUARE_SIZE,\n\tHEATMAP_GUTTER_SIZE\n} from '../utils/constants';\n\nconst COL_WIDTH = HEATMAP_SQUARE_SIZE + HEATMAP_GUTTER_SIZE;\nconst ROW_HEIGHT = COL_WIDTH;\n// const DAY_INCR = 1;\n\nexport default class Heatmap extends BaseChart {\n\tconstructor(parent, options) {\n\t\tsuper(parent, options);\n\t\tthis.type = 'heatmap';\n\n\t\tthis.countLabel = options.countLabel || '';\n\n\t\tlet validStarts = ['Sunday', 'Monday'];\n\t\tlet startSubDomain = validStarts.includes(options.startSubDomain)\n\t\t\t? options.startSubDomain : 'Sunday';\n\t\tthis.startSubDomainIndex = validStarts.indexOf(startSubDomain);\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.discreteDomains = options.discreteDomains === 0 ? 0 : 1;\n\n\t\tm.paddings.top = ROW_HEIGHT * 3;\n\t\tm.paddings.bottom = 0;\n\t\tm.legendHeight = ROW_HEIGHT * 2;\n\t\tm.baseHeight = ROW_HEIGHT * NO_OF_DAYS_IN_WEEK\n\t\t\t+ getExtraHeight(m);\n\n\t\tlet d = this.data;\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tthis.independentWidth = (getWeeksBetween(d.start, d.end)\n\t\t\t+ spacing) * COL_WIDTH + getExtraWidth(m);\n\t}\n\n\tupdateWidth() {\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tlet noOfWeeks = this.state.noOfWeeks ? this.state.noOfWeeks : 52;\n\t\tthis.baseWidth = (noOfWeeks + spacing) * COL_WIDTH\n\t\t\t+ getExtraWidth(this.measures);\n\t}\n\n\tprepareData(data = this.data) {\n\t\tif (data.start && data.end && data.start > data.end) {\n\t\t\tthrow new Error('Start date cannot be greater than end date.');\n\t\t}\n\n\t\tif (!data.start) {\n\t\t\tdata.start = new Date();\n\t\t\tdata.start.setFullYear(data.start.getFullYear() - 1);\n\t\t}\n\t\tif (!data.end) { data.end = new Date(); }\n\t\tdata.dataPoints = data.dataPoints || {};\n\n\t\tif (parseInt(Object.keys(data.dataPoints)[0]) > 100000) {\n\t\t\tlet points = {};\n\t\t\tObject.keys(data.dataPoints).forEach(timestampSec => {\n\t\t\t\tlet date = new Date(timestampSec * NO_OF_MILLIS);\n\t\t\t\tpoints[getYyyyMmDd(date)] = data.dataPoints[timestampSec];\n\t\t\t});\n\t\t\tdata.dataPoints = points;\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\n\t\ts.start = clone(this.data.start);\n\t\ts.end = clone(this.data.end);\n\n\t\ts.firstWeekStart = clone(s.start);\n\t\ts.noOfWeeks = getWeeksBetween(s.start, s.end);\n\t\ts.distribution = calcDistribution(\n\t\t\tObject.values(this.data.dataPoints), HEATMAP_DISTRIBUTION_SIZE);\n\n\t\ts.domainConfigs = this.getDomains();\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\t\tlet lessCol = this.discreteDomains ? 0 : 1;\n\n\t\tlet componentConfigs = s.domainConfigs.map((config, i) => [\n\t\t\t'heatDomain',\n\t\t\t{\n\t\t\t\tindex: config.index,\n\t\t\t\tcolWidth: COL_WIDTH,\n\t\t\t\trowHeight: ROW_HEIGHT,\n\t\t\t\tsquareSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\tradius: this.rawChartArgs.radius || 0,\n\t\t\t\txTranslate: s.domainConfigs\n\t\t\t\t\t.filter((config, j) => j < i)\n\t\t\t\t\t.map(config => config.cols.length - lessCol)\n\t\t\t\t\t.reduce((a, b) => a + b, 0)\n\t\t\t\t\t* COL_WIDTH\n\t\t\t},\n\t\t\tfunction () {\n\t\t\t\treturn s.domainConfigs[i];\n\t\t\t}.bind(this)\n\n\t\t]);\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map((args, i) => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0] + '-' + i, component];\n\t\t\t})\n\t\t);\n\n\t\tlet y = 0;\n\t\tDAY_NAMES_SHORT.forEach((dayName, i) => {\n\t\t\tif ([1, 3, 5].includes(i)) {\n\t\t\t\tlet dayText = makeText('subdomain-name', -COL_WIDTH / 2, y, dayName,\n\t\t\t\t\t{\n\t\t\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\t\t\tdy: 8,\n\t\t\t\t\t\ttextAnchor: 'end'\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tthis.drawArea.appendChild(dayText);\n\t\t\t}\n\t\t\ty += ROW_HEIGHT;\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tif (!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\n\t\tthis.data = this.prepareData(data);\n\t\tthis.draw();\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tthis.components.forEach(comp => {\n\t\t\t\tlet daySquares = comp.store;\n\t\t\t\tlet daySquare = e.target;\n\t\t\t\tif (daySquares.includes(daySquare)) {\n\n\t\t\t\t\tlet count = daySquare.getAttribute('data-value');\n\t\t\t\t\tlet dateParts = daySquare.getAttribute('data-date').split('-');\n\n\t\t\t\t\tlet month = getMonthName(parseInt(dateParts[1]) - 1, true);\n\n\t\t\t\t\tlet gOff = this.container.getBoundingClientRect(), pOff = daySquare.getBoundingClientRect();\n\n\t\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\t\tlet x = pOff.left - gOff.left + width / 2;\n\t\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\t\tlet value = count + ' ' + this.countLabel;\n\t\t\t\t\tlet name = ' on ' + month + ' ' + dateParts[0] + ', ' + dateParts[2];\n\n\t\t\t\t\tthis.tip.setValues(x, y, { name: name, value: value, valueFirst: 1 }, []);\n\t\t\t\t\tthis.tip.showTip();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\trenderLegend() {\n\t\tthis.legendArea.textContent = '';\n\t\tlet x = 0;\n\t\tlet y = ROW_HEIGHT;\n\t\tlet radius = this.rawChartArgs.radius || 0;\n\n\t\tlet lessText = makeText('subdomain-name', x, y, 'Less',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tx = (COL_WIDTH * 2) + COL_WIDTH / 2;\n\t\tthis.legendArea.appendChild(lessText);\n\n\t\tthis.colors.slice(0, HEATMAP_DISTRIBUTION_SIZE).map((color, i) => {\n\t\t\tconst square = heatSquare('heatmap-legend-unit', x + (COL_WIDTH + 3) * i,\n\t\t\t\ty, HEATMAP_SQUARE_SIZE, radius, color);\n\t\t\tthis.legendArea.appendChild(square);\n\t\t});\n\n\t\tlet moreTextX = x + HEATMAP_DISTRIBUTION_SIZE * (COL_WIDTH + 3) + COL_WIDTH / 4;\n\t\tlet moreText = makeText('subdomain-name', moreTextX, y, 'More',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tthis.legendArea.appendChild(moreText);\n\t}\n\n\tgetDomains() {\n\t\tlet s = this.state;\n\t\tconst [startMonth, startYear] = [s.start.getMonth(), s.start.getFullYear()];\n\t\tconst [endMonth, endYear] = [s.end.getMonth(), s.end.getFullYear()];\n\n\t\tconst noOfMonths = (endMonth - startMonth + 1) + (endYear - startYear) * 12;\n\n\t\tlet domainConfigs = [];\n\n\t\tlet startOfMonth = clone(s.start);\n\t\tfor (var i = 0; i < noOfMonths; i++) {\n\t\t\tlet endDate = s.end;\n\t\t\tif (!areInSameMonth(startOfMonth, s.end)) {\n\t\t\t\tlet [month, year] = [startOfMonth.getMonth(), startOfMonth.getFullYear()];\n\t\t\t\tendDate = getLastDateInMonth(month, year);\n\t\t\t}\n\t\t\tdomainConfigs.push(this.getDomainConfig(startOfMonth, endDate));\n\n\t\t\taddDays(endDate, 1);\n\t\t\tstartOfMonth = endDate;\n\t\t}\n\n\t\treturn domainConfigs;\n\t}\n\n\tgetDomainConfig(startDate, endDate = '') {\n\t\tlet [month, year] = [startDate.getMonth(), startDate.getFullYear()];\n\t\tlet startOfWeek = setDayToSunday(startDate); // TODO: Monday as well\n\t\tendDate = clone(endDate) || getLastDateInMonth(month, year);\n\n\t\tlet domainConfig = {\n\t\t\tindex: month,\n\t\t\tcols: []\n\t\t};\n\n\t\taddDays(endDate, 1);\n\t\tlet noOfMonthWeeks = getWeeksBetween(startOfWeek, endDate);\n\n\t\tlet cols = [], col;\n\t\tfor (var i = 0; i < noOfMonthWeeks; i++) {\n\t\t\tcol = this.getCol(startOfWeek, month);\n\t\t\tcols.push(col);\n\n\t\t\tstartOfWeek = new Date(col[NO_OF_DAYS_IN_WEEK - 1].yyyyMmDd);\n\t\t\taddDays(startOfWeek, 1);\n\t\t}\n\n\t\tif (col[NO_OF_DAYS_IN_WEEK - 1].dataValue !== undefined) {\n\t\t\taddDays(startOfWeek, 1);\n\t\t\tcols.push(this.getCol(startOfWeek, month, true));\n\t\t}\n\n\t\tdomainConfig.cols = cols;\n\n\t\treturn domainConfig;\n\t}\n\n\tgetCol(startDate, month, empty = false) {\n\t\tlet s = this.state;\n\n\t\t// startDate is the start of week\n\t\tlet currentDate = clone(startDate);\n\t\tlet col = [];\n\n\t\tfor (var i = 0; i < NO_OF_DAYS_IN_WEEK; i++, addDays(currentDate, 1)) {\n\t\t\tlet config = {};\n\n\t\t\t// Non-generic adjustment for entire heatmap, needs state\n\t\t\tlet currentDateWithinData = currentDate >= s.start && currentDate <= s.end;\n\n\t\t\tif (empty || currentDate.getMonth() !== month || !currentDateWithinData) {\n\t\t\t\tconfig.yyyyMmDd = getYyyyMmDd(currentDate);\n\t\t\t} else {\n\t\t\t\tconfig = this.getSubDomainConfig(currentDate);\n\t\t\t}\n\t\t\tcol.push(config);\n\t\t}\n\n\t\treturn col;\n\t}\n\n\tgetSubDomainConfig(date) {\n\t\tlet yyyyMmDd = getYyyyMmDd(date);\n\t\tlet dataValue = this.data.dataPoints[yyyyMmDd];\n\t\tlet config = {\n\t\t\tyyyyMmDd: yyyyMmDd,\n\t\t\tdataValue: dataValue || 0,\n\t\t\tfill: this.colors[getMaxCheckpoint(dataValue, this.state.distribution)]\n\t\t};\n\t\treturn config;\n\t}\n}\n", "import { fillArray } from '../utils/helpers';\nimport {\n\tDEFAULT_AXIS_CHART_TYPE, AXIS_DATASET_CHART_TYPES, DEFAULT_CHAR_WIDTH,\n\tSERIES_LABEL_SPACE_RATIO\n} from '../utils/constants';\n\nexport function dataPrep(data, type) {\n\tdata.labels = data.labels || [];\n\n\tlet datasetLength = data.labels.length;\n\n\t// Datasets\n\tlet datasets = data.datasets;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\tif (!datasets) {\n\t\t// default\n\t\tdatasets = [{\n\t\t\tvalues: zeroArray\n\t\t}];\n\t}\n\n\tdatasets.map(d => {\n\t\t// Set values\n\t\tif (!d.values) {\n\t\t\td.values = zeroArray;\n\t\t} else {\n\t\t\t// Check for non values\n\t\t\tlet vals = d.values;\n\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\n\n\t\t\t// Trim or extend\n\t\t\tif (vals.length > datasetLength) {\n\t\t\t\tvals = vals.slice(0, datasetLength);\n\t\t\t} else {\n\t\t\t\tvals = fillArray(vals, datasetLength - vals.length, 0);\n\t\t\t}\n\t\t\td.values = vals;\n\t\t}\n\n\t\t// Set type\n\t\tif (!d.chartType) {\n\t\t\tif (!AXIS_DATASET_CHART_TYPES.includes(type)) type === DEFAULT_AXIS_CHART_TYPE;\n\t\t\td.chartType = type;\n\t\t}\n\n\t});\n\n\t// Markers\n\n\t// Regions\n\t// data.yRegions = data.yRegions || [];\n\tif (data.yRegions) {\n\t\tdata.yRegions.map(d => {\n\t\t\tif (d.end < d.start) {\n\t\t\t\t[d.start, d.end] = [d.end, d.start];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn data;\n}\n\nexport function zeroDataPrep(realData) {\n\tlet datasetLength = realData.labels.length;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\n\tlet zeroData = {\n\t\tlabels: realData.labels.slice(0, -1),\n\t\tdatasets: realData.datasets.map(d => {\n\t\t\treturn {\n\t\t\t\tname: '',\n\t\t\t\tvalues: zeroArray.slice(0, -1),\n\t\t\t\tchartType: d.chartType\n\t\t\t};\n\t\t}),\n\t};\n\n\tif (realData.yMarkers) {\n\t\tzeroData.yMarkers = [\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\tif (realData.yRegions) {\n\t\tzeroData.yRegions = [\n\t\t\t{\n\t\t\t\tstart: 0,\n\t\t\t\tend: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\treturn zeroData;\n}\n\nexport function getShortenedLabels(chartWidth, labels = [], isSeries = true) {\n\tlet allowedSpace = (chartWidth / labels.length) * SERIES_LABEL_SPACE_RATIO;\n\tif (allowedSpace <= 0) allowedSpace = 1;\n\tlet allowedLetters = allowedSpace / DEFAULT_CHAR_WIDTH;\n\n\tlet seriesMultiple;\n\tif (isSeries) {\n\t\t// Find the maximum label length for spacing calculations\n\t\tlet maxLabelLength = Math.max(...labels.map(label => label.length));\n\t\tseriesMultiple = Math.ceil(maxLabelLength / allowedLetters);\n\t}\n\n\tlet calcLabels = labels.map((label, i) => {\n\t\tlabel += \"\";\n\t\tif (label.length > allowedLetters) {\n\n\t\t\tif (!isSeries) {\n\t\t\t\tif (allowedLetters - 3 > 0) {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters - 3) + \" ...\";\n\t\t\t\t} else {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters) + '..';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (i % seriesMultiple !== 0) {\n\t\t\t\t\tif (i !== (labels.length - 1)) {\n\t\t\t\t\t\tlabel = \"\";\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (i > (labels.length - (seriesMultiple / 2))) {\n\t\t\t\t\t\tlabel = \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn label;\n\t});\n\n\treturn calcLabels;\n}\n", "import BaseChart from './BaseChart';\nimport { dataPrep, zeroDataPrep, getShortenedLabels } from '../utils/axis-chart-utils';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset, fire } from '../utils/dom';\nimport { calcChartIntervals, getIntervalSize, getValueRange, getZeroIndex, scale, getClosestInArray } from '../utils/intervals';\nimport { floatTwo } from '../utils/helpers';\nimport { makeOverlay, updateOverlay, legendDot } from '../utils/draw';\nimport {\n\tgetTopOffset, getLeftOffset, MIN_BAR_PERCENT_HEIGHT, BAR_CHART_SPACE_RATIO,\n\tLINE_CHART_DOT_SIZE\n} from '../utils/constants';\n\nexport default class AxisChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\n\t\tthis.barOptions = args.barOptions || {};\n\t\tthis.lineOptions = args.lineOptions || {};\n\n\t\tthis.type = args.type || 'line';\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures() {\n\t\tif (this.data.datasets.length <= 1) {\n\t\t\tthis.config.showLegend = 0;\n\t\t\tthis.measures.paddings.bottom = 30;\n\t\t}\n\t}\n\n\tconfigure(options) {\n\t\tsuper.configure(options);\n\n\t\toptions.axisOptions = options.axisOptions || {};\n\t\toptions.tooltipOptions = options.tooltipOptions || {};\n\n\t\tthis.config.xAxisMode = options.axisOptions.xAxisMode || 'span';\n\t\tthis.config.yAxisMode = options.axisOptions.yAxisMode || 'span';\n\t\tthis.config.xIsSeries = options.axisOptions.xIsSeries || 0;\n\t\tthis.config.shortenYAxisNumbers = options.axisOptions.shortenYAxisNumbers || 0;\n\t\tthis.config.numberFormatter = options.axisOptions.numberFormatter;\n\n\t\tthis.config.yAxisRange = options.axisOptions.yAxisRange || {},\n\n\t\tthis.config.formatTooltipX = options.tooltipOptions.formatTooltipX;\n\t\tthis.config.formatTooltipY = options.tooltipOptions.formatTooltipY;\n\n\t\tthis.config.valuesOverPoints = options.valuesOverPoints;\n\t\tthis.config.legendRowHeight = 30;\n\t}\n\n\tprepareData(data = this.data) {\n\t\treturn dataPrep(data, this.type);\n\t}\n\n\tprepareFirstData(data = this.data) {\n\t\treturn zeroDataPrep(data);\n\t}\n\n\tcalc(onlyWidthChange = false) {\n\t\tthis.calcXPositions();\n\t\tif (!onlyWidthChange) {\n\t\t\tthis.calcYAxisParameters(this.getAllYValues(), this.type === 'line');\n\t\t}\n\t\tthis.makeDataByIndex();\n\t}\n\n\tcalcXPositions() {\n\t\tlet s = this.state;\n\t\tlet labels = this.data.labels;\n\t\ts.datasetLength = labels.length;\n\n\t\ts.unitWidth = this.width / (s.datasetLength);\n\t\t// Default, as per bar, and mixed. Only line will be a special case\n\t\ts.xOffset = s.unitWidth / 2;\n\n\t\t// // For a pure Line Chart\n\t\t// s.unitWidth = this.width/(s.datasetLength - 1);\n\t\t// s.xOffset = 0;\n\n\t\ts.xAxis = {\n\t\t\tlabels: labels,\n\t\t\tpositions: labels.map((d, i) =>\n\t\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\n\t\t\t)\n\t\t};\n\t}\n\n\tcalcYAxisParameters(dataValues, withMinimum = 'false') {\n\t\tconst yPts = calcChartIntervals(dataValues, withMinimum, this.config.yAxisRange);\n\t\tconst scaleMultiplier = this.height / getValueRange(yPts);\n\t\tconst intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\n\t\tconst zeroLine = this.height - (getZeroIndex(yPts) * intervalHeight);\n\n\t\tthis.state.yAxis = {\n\t\t\tlabels: yPts,\n\t\t\tpositions: yPts.map(d => zeroLine - d * scaleMultiplier),\n\t\t\tscaleMultiplier: scaleMultiplier,\n\t\t\tzeroLine: zeroLine,\n\t\t};\n\n\t\t// Dependent if above changes\n\t\tthis.calcDatasetPoints();\n\t\tthis.calcYExtremes();\n\t\tthis.calcYRegions();\n\t}\n\n\tcalcDatasetPoints() {\n\t\tlet s = this.state;\n\t\tlet scaleAll = values => values.map(val => scale(val, s.yAxis));\n\n\t\ts.datasets = this.data.datasets.map((d, i) => {\n\t\t\tlet values = d.values;\n\t\t\tlet cumulativeYs = d.cumulativeYs || [];\n\t\t\treturn {\n\t\t\t\tname: d.name && d.name.replace(/<|>|&/g, (char) => char == '&' ? '&amp;' : char == '<' ? '&lt;' : '&gt;'),\n\t\t\t\tindex: i,\n\t\t\t\tchartType: d.chartType,\n\n\t\t\t\tvalues: values,\n\t\t\t\tyPositions: scaleAll(values),\n\n\t\t\t\tcumulativeYs: cumulativeYs,\n\t\t\t\tcumulativeYPos: scaleAll(cumulativeYs),\n\t\t\t};\n\t\t});\n\t}\n\n\tcalcYExtremes() {\n\t\tlet s = this.state;\n\t\tif (this.barOptions.stacked) {\n\t\t\ts.yExtremes = s.datasets[s.datasets.length - 1].cumulativeYPos;\n\t\t\treturn;\n\t\t}\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\n\t\ts.datasets.map(d => {\n\t\t\td.yPositions.map((pos, j) => {\n\t\t\t\tif (pos < s.yExtremes[j]) {\n\t\t\t\t\ts.yExtremes[j] = pos;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tcalcYRegions() {\n\t\tlet s = this.state;\n\t\tif (this.data.yMarkers) {\n\t\t\tthis.state.yMarkers = this.data.yMarkers.map(d => {\n\t\t\t\td.position = scale(d.value, s.yAxis);\n\t\t\t\tif (!d.options) d.options = {};\n\t\t\t\t// if(!d.label.includes(':')) {\n\t\t\t\t// \td.label += ': ' + d.value;\n\t\t\t\t// }\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t\tif (this.data.yRegions) {\n\t\t\tthis.state.yRegions = this.data.yRegions.map(d => {\n\t\t\t\td.startPos = scale(d.start, s.yAxis);\n\t\t\t\td.endPos = scale(d.end, s.yAxis);\n\t\t\t\tif (!d.options) d.options = {};\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t}\n\n\tgetAllYValues() {\n\t\tlet key = 'values';\n\n\t\tif (this.barOptions.stacked) {\n\t\t\tkey = 'cumulativeYs';\n\t\t\tlet cumulative = new Array(this.state.datasetLength).fill(0);\n\t\t\tthis.data.datasets.map((d, i) => {\n\t\t\t\tlet values = this.data.datasets[i].values;\n\t\t\t\td[key] = cumulative = cumulative.map((c, i) => c + values[i]);\n\t\t\t});\n\t\t}\n\n\t\tlet allValueLists = this.data.datasets.map(d => d[key]);\n\t\tif (this.data.yMarkers) {\n\t\t\tallValueLists.push(this.data.yMarkers.map(d => d.value));\n\t\t}\n\t\tif (this.data.yRegions) {\n\t\t\tthis.data.yRegions.map(d => {\n\t\t\t\tallValueLists.push([d.end, d.start]);\n\t\t\t});\n\t\t}\n\n\t\treturn [].concat(...allValueLists);\n\t}\n\n\tsetupComponents() {\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'yAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.yAxisMode,\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tshortenNumbers: this.config.shortenYAxisNumbers,\n\t\t\t\t\tnumberFormatter: this.config.numberFormatter,\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\treturn this.state.yAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'xAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.xAxisMode,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\ts.xAxis.calcLabels = getShortenedLabels(this.width,\n\t\t\t\t\t\ts.xAxis.labels, this.config.xIsSeries);\n\n\t\t\t\t\treturn s.xAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'yRegions',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\treturn this.state.yRegions;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\t\t];\n\n\t\tlet barDatasets = this.state.datasets.filter(d => d.chartType === 'bar');\n\t\tlet lineDatasets = this.state.datasets.filter(d => d.chartType === 'line');\n\n\t\tlet barsConfigs = barDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'barGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tstacked: this.barOptions.stacked,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t\tminHeight: this.height * MIN_BAR_PERCENT_HEIGHT,\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet stacked = this.barOptions.stacked;\n\n\t\t\t\t\tlet spaceRatio = this.barOptions.spaceRatio || BAR_CHART_SPACE_RATIO;\n\t\t\t\t\tlet barsWidth = s.unitWidth * (1 - spaceRatio);\n\t\t\t\t\tlet barWidth = barsWidth / (stacked ? 1 : barDatasets.length);\n\n\t\t\t\t\tlet xPositions = s.xAxis.positions.map(x => x - barsWidth / 2);\n\t\t\t\t\tif (!stacked) {\n\t\t\t\t\t\txPositions = xPositions.map(p => p + barWidth * index);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet labels = new Array(s.datasetLength).fill('');\n\t\t\t\t\tif (this.config.valuesOverPoints) {\n\t\t\t\t\t\tif (stacked && d.index === s.datasets.length - 1) {\n\t\t\t\t\t\t\tlabels = d.cumulativeYs;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlabels = d.values;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet offsets = new Array(s.datasetLength).fill(0);\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\toffsets = d.yPositions.map((y, j) => y - d.cumulativeYPos[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: xPositions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\t\t\t\t\t\toffsets: offsets,\n\t\t\t\t\t\t// values: d.values,\n\t\t\t\t\t\tlabels: labels,\n\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\n\t\t\t\t\t\tbarsWidth: barsWidth,\n\t\t\t\t\t\tbarWidth: barWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet lineConfigs = lineDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'lineGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tsvgDefs: this.svgDefs,\n\t\t\t\t\theatline: this.lineOptions.heatline,\n\t\t\t\t\tregionFill: this.lineOptions.regionFill,\n\t\t\t\t\tspline: this.lineOptions.spline,\n\t\t\t\t\tshowDots: this.lineOptions.showDots,\n\t\t\t\t\ttrailingDot: this.lineOptions.trailingDot,\n\t\t\t\t\thideDotBorder: this.lineOptions.hideDotBorder,\n\t\t\t\t\thideLine: this.lineOptions.hideLine,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet minLine = s.yAxis.positions[0] < s.yAxis.zeroLine\n\t\t\t\t\t\t? s.yAxis.positions[0] : s.yAxis.zeroLine;\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xAxis.positions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\n\t\t\t\t\t\tvalues: d.values,\n\n\t\t\t\t\t\tzeroLine: minLine,\n\t\t\t\t\t\tradius: this.lineOptions.dotSize || LINE_CHART_DOT_SIZE,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet markerConfigs = [\n\t\t\t[\n\t\t\t\t'yMarkers',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\treturn this.state.yMarkers;\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tcomponentConfigs = componentConfigs.concat(barsConfigs, lineConfigs, markerConfigs);\n\n\t\tlet optionals = ['yMarkers', 'yRegions'];\n\t\tthis.dataUnitComponents = [];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.filter(args => !optionals.includes(args[0]) || this.state[args[0]])\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\tif (args[0].includes('lineGraph') || args[0].includes('barGraph')) {\n\t\t\t\t\tthis.dataUnitComponents.push(component);\n\t\t\t\t}\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tmakeDataByIndex() {\n\t\tthis.dataByIndex = {};\n\n\t\tlet s = this.state;\n\t\tlet formatX = this.config.formatTooltipX;\n\t\tlet formatY = this.config.formatTooltipY;\n\t\tlet titles = s.xAxis.labels;\n\n\t\ttitles.map((label, index) => {\n\t\t\tlet values = this.state.datasets.map((set, i) => {\n\t\t\t\tlet value = set.values[index];\n\t\t\t\treturn {\n\t\t\t\t\ttitle: set.name,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tyPos: set.yPositions[index],\n\t\t\t\t\tcolor: this.colors[i],\n\t\t\t\t\tformatted: formatY ? formatY(value) : value,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tthis.dataByIndex[index] = {\n\t\t\t\tlabel: label,\n\t\t\t\tformattedLabel: formatX ? formatX(label) : label,\n\t\t\t\txPos: s.xAxis.positions[index],\n\t\t\t\tvalues: values,\n\t\t\t\tyExtreme: s.yExtremes[index],\n\t\t\t};\n\t\t});\n\t}\n\n\tbindTooltip() {\n\t\t// NOTE: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet m = this.measures;\n\t\t\tlet o = getOffset(this.container);\n\t\t\tlet relX = e.pageX - o.left - getLeftOffset(m);\n\t\t\tlet relY = e.pageY - o.top;\n\n\t\t\tif (relY < this.height + getTopOffset(m)\n\t\t\t\t&& relY > getTopOffset(m)) {\n\t\t\t\tthis.mapTooltipXPosition(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hideTip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmapTooltipXPosition(relX) {\n\t\tlet s = this.state;\n\t\tif (!s.yExtremes) return;\n\n\t\tlet index = getClosestInArray(relX, s.xAxis.positions, true);\n\t\tif (index >= 0) {\n\t\t\tlet dbi = this.dataByIndex[index];\n\n\t\t\tthis.tip.setValues(\n\t\t\t\tdbi.xPos + this.tip.offset.x,\n\t\t\t\tdbi.yExtreme + this.tip.offset.y,\n\t\t\t\t{ name: dbi.formattedLabel, value: '' },\n\t\t\t\tdbi.values,\n\t\t\t\tindex\n\t\t\t);\n\n\t\t\tthis.tip.showTip();\n\t\t}\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.data;\n\t\tif (s.datasets.length > 1) {\n\t\t\tsuper.renderLegend(s.datasets);\n\t\t}\n\t}\n\n\tmakeLegend(data, index, x_pos, y_pos) {\n\t\treturn legendDot(\n\t\t\tx_pos,\n\t\t\ty_pos + 5, // Extra offset\n\t\t\t12, // size\n\t\t\t3, // dot radius\n\t\t\tthis.colors[index], // fill\n\t\t\tdata.name, //label\n\t\t\tnull, // value\n\t\t\t8.75, // base_font_size\n\t\t\tthis.config.truncateLegends // truncate legends\n\t\t);\n\t}\n\n\t// Overlay\n\tmakeOverlay() {\n\t\tif (this.init) {\n\t\t\tthis.init = 0;\n\t\t\treturn;\n\t\t}\n\t\tif (this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\n\t\tthis.overlayGuides = this.dataUnitComponents.map(c => {\n\t\t\treturn {\n\t\t\t\ttype: c.unitType,\n\t\t\t\toverlay: undefined,\n\t\t\t\tunits: c.units,\n\t\t\t};\n\t\t});\n\n\t\tif (this.state.currentIndex === undefined) {\n\t\t\tthis.state.currentIndex = this.state.datasetLength - 1;\n\t\t}\n\n\t\t// Render overlays\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\n\t\t\td.overlay = makeOverlay[d.type](currentUnit);\n\t\t\tthis.drawArea.appendChild(d.overlay);\n\t\t});\n\t}\n\n\tupdateOverlayGuides() {\n\t\tif (this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\t}\n\n\tbindOverlay() {\n\t\tthis.parent.addEventListener('data-select', () => {\n\t\t\tthis.updateOverlay();\n\t\t});\n\t}\n\n\tbindUnits() {\n\t\tthis.dataUnitComponents.map(c => {\n\t\t\tc.units.map(unit => {\n\t\t\t\tunit.addEventListener('click', () => {\n\t\t\t\t\tlet index = unit.getAttribute('data-point-index');\n\t\t\t\t\tthis.setCurrentDataPoint(index);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\t// Note: Doesn't work as tooltip is absolutely positioned\n\t\tthis.tip.container.addEventListener('click', () => {\n\t\t\tlet index = this.tip.container.getAttribute('data-point-index');\n\t\t\tthis.setCurrentDataPoint(index);\n\t\t});\n\t}\n\n\tupdateOverlay() {\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\t\t\tupdateOverlay[d.type](currentUnit, d.overlay);\n\t\t});\n\t}\n\n\tonLeftArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex - 1);\n\t}\n\n\tonRightArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex + 1);\n\t}\n\n\tgetDataPoint(index = this.state.currentIndex) {\n\t\tlet s = this.state;\n\t\tlet data_point = {\n\t\t\tindex: index,\n\t\t\tlabel: s.xAxis.labels[index],\n\t\t\tvalues: s.datasets.map(d => d.values[index])\n\t\t};\n\t\treturn data_point;\n\t}\n\n\tsetCurrentDataPoint(index) {\n\t\tlet s = this.state;\n\t\tindex = parseInt(index);\n\t\tif (index < 0) index = 0;\n\t\tif (index >= s.xAxis.labels.length) index = s.xAxis.labels.length - 1;\n\t\tif (index === s.currentIndex) return;\n\t\ts.currentIndex = index;\n\t\tfire(this.parent, \"data-select\", this.getDataPoint());\n\t}\n\n\n\n\t// API\n\taddDataPoint(label, datasetValues, index = this.state.datasetLength) {\n\t\tsuper.addDataPoint(label, datasetValues, index);\n\t\tthis.data.labels.splice(index, 0, label);\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\td.values.splice(index, 0, datasetValues[i]);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tremoveDataPoint(index = this.state.datasetLength - 1) {\n\t\tif (this.data.labels.length <= 1) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.removeDataPoint(index);\n\t\tthis.data.labels.splice(index, 1);\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values.splice(index, 1);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tupdateDataset(datasetValues, index = 0) {\n\t\tthis.data.datasets[index].values = datasetValues;\n\t\tthis.update(this.data);\n\t}\n\t// addDataset(dataset, index) {}\n\t// removeDataset(index = 0) {}\n\n\tupdateDatasets(datasets) {\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\tif (datasets[i]) {\n\t\t\t\td.values = datasets[i];\n\t\t\t}\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\t// updateDataPoint(dataPoint, index = 0) {}\n\t// addDataPoint(dataPoint, index = 0) {}\n\t// removeDataPoint(index = 0) {}\n}\n", "import '../css/charts.scss';\n\nimport PercentageChart from './charts/PercentageChart';\nimport PieChart from './charts/PieChart';\nimport Heatmap from './charts/Heatmap';\nimport AxisChart from './charts/AxisChart';\nimport DonutChart from './charts/DonutChart';\n\nconst chartTypes = {\n\tbar: AxisChart,\n\tline: AxisChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tpie: PieChart,\n\tdonut: DonutChart,\n};\n\nfunction getChartByType(chartType = 'line', parent, options) {\n\tif (chartType === 'axis-mixed') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(parent, options);\n\t}\n\n\tif (!chartTypes[chartType]) {\n\t\tconsole.error(\"Undefined chart type: \" + chartType);\n\t\treturn;\n\t}\n\n\treturn new chartTypes[chartType](parent, options);\n}\n\nclass Chart {\n\tconstructor(parent, options) {\n\t\treturn getChartByType(options.type, parent, options);\n\t}\n}\n\nexport { Chart, PercentageChart, PieChart, Heatmap, AxisChart };", "import PieChart from './PieChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { makeArcStrokePathStr, makeStrokeCircleStr } from '../utils/draw';\nimport { transform } from '../utils/animation';\n\nexport default class DonutChart extends PieChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\n\t\tthis.type = 'donut';\n\t\tthis.sliceName = 'donutSlices';\n\n\t\tthis.arcFunc = makeArcStrokePathStr;\n\t\tthis.shapeFunc = makeStrokeCircleStr;\n\n\t\tthis.strokeWidth = args.strokeWidth || 30;\n\t}\n\n\tgetRadius() {\n\t\treturn this.height > this.width\n\t\t\t? this.center.x - this.strokeWidth / 2\n\t\t\t: this.center.y - this.strokeWidth / 2;\n\t}\n\n\tresetHover(path, color) {\n\t\ttransform(path,'translate3d(0,0,0)');\n\t\tthis.tip.hideTip();\n\t\tpath.style.stroke = color;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\tthis.sliceName,\n\t\t\t\t{},\n\t\t\t\tfunction () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors,\n\t\t\t\t\t\tstrokeWidth: this.strokeWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n}\n", "import { Chart } from \"frappe-charts/dist/frappe-charts.esm\";\n\nfrappe.provide(\"frappe.ui\");\nfrappe.Chart = Chart;\n\nfrappe.ui.RealtimeChart = class RealtimeChart extends frappe.Chart {\n\tconstructor(element, socketEvent, maxLabelPoints = 8, data) {\n\t\tsuper(element, data);\n\t\tif (data.data.datasets[0].values.length > maxLabelPoints) {\n\t\t\tfrappe.throw(\n\t\t\t\t__(\n\t\t\t\t\t\"Length of passed data array is greater than value of maximum allowed label points!\"\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\tthis.currentSize = data.data.datasets[0].values.length;\n\t\tthis.socketEvent = socketEvent;\n\t\tthis.maxLabelPoints = maxLabelPoints;\n\n\t\tthis.start_updating = function () {\n\t\t\tfrappe.realtime.on(this.socketEvent, (data) => {\n\t\t\t\tthis.update_chart(data.label, data.points);\n\t\t\t});\n\t\t};\n\n\t\tthis.stop_updating = function () {\n\t\t\tfrappe.realtime.off(this.socketEvent);\n\t\t};\n\n\t\tthis.update_chart = function (label, data) {\n\t\t\tif (this.currentSize >= this.maxLabelPoints) {\n\t\t\t\tthis.removeDataPoint(0);\n\t\t\t} else {\n\t\t\t\tthis.currentSize++;\n\t\t\t}\n\t\t\tthis.addDataPoint(label, data);\n\t\t};\n\t}\n};\n", "frappe.provide(\"frappe.ui.keys\");\n\nlet shortcut_groups = new WeakMap();\nlet shortcut_group_list = [];\nfrappe.ui.keys.shortcut_groups = shortcut_groups;\n\nfrappe.ui.keys.get_shortcut_group = (parent) => {\n\t// parent must be an object\n\tif (!shortcut_groups.has(parent)) {\n\t\tshortcut_groups.set(parent, new frappe.ui.keys.AltShortcutGroup());\n\t}\n\treturn shortcut_groups.get(parent);\n};\n\nlet listener_added = false;\nlet $current_dropdown = null;\nlet $body = $(document.body);\n\nfrappe.ui.keys.bind_shortcut_group_event = () => {\n\tif (listener_added) return;\n\tlistener_added = true;\n\n\tfunction highlight_alt_shortcuts() {\n\t\tif ($current_dropdown) {\n\t\t\t$current_dropdown.addClass(\"alt-pressed\");\n\t\t\t$body.removeClass(\"alt-pressed\");\n\t\t} else {\n\t\t\t$body.addClass(\"alt-pressed\");\n\t\t\t$current_dropdown && $current_dropdown.removeClass(\"alt-pressed\");\n\t\t}\n\t}\n\n\tfunction unhighlight_alt_shortcuts() {\n\t\t$current_dropdown && $current_dropdown.removeClass(\"alt-pressed\");\n\t\t$body.removeClass(\"alt-pressed\");\n\t}\n\n\t$(document).on(\"keydown\", (e) => {\n\t\tlet key = (frappe.ui.keys.key_map[e.which] || \"\").toLowerCase();\n\n\t\tif (key === \"alt\") {\n\t\t\thighlight_alt_shortcuts();\n\t\t}\n\n\t\tif (e.shiftKey || e.ctrlKey || e.metaKey) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (key && e.altKey) {\n\t\t\tlet shortcut = get_shortcut_for_key(key);\n\t\t\tif (shortcut) {\n\t\t\t\te.preventDefault();\n\t\t\t\tshortcut.$target[0].click();\n\t\t\t}\n\t\t\thighlight_alt_shortcuts();\n\t\t}\n\t});\n\t$(document).on(\"keyup\", (e) => {\n\t\tif (e.key === \"Alt\") {\n\t\t\tunhighlight_alt_shortcuts();\n\t\t}\n\t});\n\t$(document).on(\"mousemove\", () => {\n\t\tunhighlight_alt_shortcuts();\n\t});\n};\n\nfunction get_shortcut_for_key(key) {\n\t// Get the shortcut for combination of alt+key\n\t// Priority 1: Open dropdown\n\t// Priority 2: Current Page\n\n\tlet shortcuts = shortcut_group_list\n\t\t.filter((shortcut_group) => key in shortcut_group.shortcuts_dict)\n\t\t.map((shortcut_group) => shortcut_group.shortcuts_dict[key])\n\t\t.filter((shortcut) => shortcut.$target.is(\":visible\"));\n\n\tlet shortcut = null;\n\n\tif ($current_dropdown && $current_dropdown.is(\".open\")) {\n\t\tshortcut = shortcuts.find((shortcut) =>\n\t\t\t$.contains($current_dropdown[0], shortcut.$target[0])\n\t\t);\n\t}\n\n\tif (shortcut) return shortcut;\n\n\tshortcut = shortcuts.find((shortcut) =>\n\t\t$.contains(window.cur_page.page.page.wrapper[0], shortcut.$target[0])\n\t);\n\n\treturn shortcut;\n}\n\nfrappe.ui.keys.AltShortcutGroup = class AltShortcutGroup {\n\tconstructor() {\n\t\tthis.shortcuts_dict = {};\n\t\t$current_dropdown = null;\n\t\tthis.bind_events();\n\t\tfrappe.ui.keys.bind_shortcut_group_event();\n\t\tshortcut_group_list.push(this);\n\t}\n\n\tbind_events() {\n\t\t$(document).on(\"show.bs.dropdown\", (e) => {\n\t\t\t$current_dropdown && $current_dropdown.removeClass(\"alt-pressed\");\n\t\t\tlet $target = $(e.target);\n\t\t\tif ($target.is(\".dropdown, .btn-group\")) {\n\t\t\t\t$current_dropdown = $target;\n\t\t\t}\n\t\t});\n\t\t$(document).on(\"hide.bs.dropdown\", () => {\n\t\t\t$current_dropdown && $current_dropdown.removeClass(\"alt-pressed\");\n\t\t\t$current_dropdown = null;\n\t\t});\n\t}\n\n\tadd($target, $text_el) {\n\t\tif (!$text_el) {\n\t\t\t$text_el = $target;\n\t\t}\n\t\tlet text_content = $text_el.text().trim();\n\t\tlet letters = text_content.split(\"\");\n\t\t// first unused letter\n\t\tlet shortcut_letter = letters.find((letter) => {\n\t\t\tletter = letter.toLowerCase();\n\t\t\tlet is_valid_char = letter >= \"a\" && letter <= \"z\";\n\t\t\treturn !this.is_taken(letter) && is_valid_char;\n\t\t});\n\t\tif (!shortcut_letter) {\n\t\t\t$text_el.attr(\"data-label\", encodeURIComponent(text_content));\n\t\t\treturn;\n\t\t}\n\t\tfor (let key in this.shortcuts_dict) {\n\t\t\tlet shortcut = this.shortcuts_dict[key];\n\t\t\tif (shortcut.text === text_content) {\n\t\t\t\tshortcut.$target = $target;\n\t\t\t\tshortcut.$text_el = $text_el;\n\t\t\t\tthis.underline_text(shortcut);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tlet shortcut = {\n\t\t\t$target,\n\t\t\t$text_el,\n\t\t\tletter: shortcut_letter,\n\t\t\ttext: text_content,\n\t\t};\n\t\tthis.shortcuts_dict[shortcut_letter.toLowerCase()] = shortcut;\n\t\tthis.underline_text(shortcut);\n\t}\n\n\tunderline_text(shortcut) {\n\t\tshortcut.$text_el.attr(\"data-label\", encodeURIComponent(shortcut.text));\n\t\tlet underline_el_found = false;\n\t\tlet text_html = shortcut.text\n\t\t\t.split(\"\")\n\t\t\t.map((letter) => {\n\t\t\t\tif (letter === shortcut.letter && !underline_el_found) {\n\t\t\t\t\tletter = `<span class=\"alt-underline\">${letter}</span>`;\n\t\t\t\t\tunderline_el_found = true;\n\t\t\t\t}\n\t\t\t\treturn letter;\n\t\t\t})\n\t\t\t.join(\"\");\n\t\tlet original_text_html = shortcut.$text_el.html();\n\t\ttext_html = original_text_html.replace(shortcut.text.trim(), text_html.trim());\n\t\tshortcut.$text_el.html(text_html);\n\t}\n\n\tis_taken(letter) {\n\t\tlet is_in_global_shortcut = frappe.ui.keys.standard_shortcuts\n\t\t\t.filter((s) => !s.page)\n\t\t\t.some((s) => s.shortcut === `alt+${letter}`);\n\t\treturn letter in this.shortcuts_dict || is_in_global_shortcut;\n\t}\n};\n", "import \"./alt_keyboard_shortcuts\";\n\nfrappe.provide(\"frappe.ui.keys.handlers\");\n\nfrappe.ui.keys.setup = function () {\n\t$(window).on(\"keydown\", function (e) {\n\t\tvar key = frappe.ui.keys.get_key(e);\n\t\tif (frappe.ui.keys.handlers[key]) {\n\t\t\tvar out = null;\n\t\t\tfor (var i = 0, l = frappe.ui.keys.handlers[key].length; i < l; i++) {\n\t\t\t\tvar handler = frappe.ui.keys.handlers[key][i];\n\t\t\t\tvar _out = handler.apply(this, [e]);\n\t\t\t\tif (_out === false) {\n\t\t\t\t\tout = _out;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t});\n};\n\nlet standard_shortcuts = [];\nfrappe.ui.keys.standard_shortcuts = standard_shortcuts;\nfrappe.ui.keys.add_shortcut = ({\n\tshortcut,\n\taction,\n\tdescription,\n\tpage,\n\ttarget,\n\tcondition,\n\tignore_inputs = false,\n} = {}) => {\n\tif (target instanceof jQuery) {\n\t\tlet $target = target;\n\t\taction = () => {\n\t\t\t$target[0].click();\n\t\t};\n\t}\n\tif (!condition) {\n\t\tcondition = () => true;\n\t}\n\tlet handler = (e) => {\n\t\tlet $focused_element = $(document.activeElement);\n\t\tlet is_input_focused = $focused_element.is(\n\t\t\t\"input, select, textarea, [contenteditable=true]\"\n\t\t);\n\t\tif (is_input_focused && !ignore_inputs) return;\n\t\tif (!condition()) return;\n\n\t\tif (action && (!page || page.wrapper.is(\":visible\"))) {\n\t\t\tlet prevent_default = action(e);\n\t\t\t// prevent default if true is explicitly returned\n\t\t\t// or nothing returned (undefined)\n\t\t\tif (prevent_default || prevent_default === undefined) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t}\n\t};\n\t// monkey patch page to handler\n\thandler.page = page;\n\t// remove handler with the same page attached to it\n\tfrappe.ui.keys.off(shortcut, page);\n\t// attach new handler\n\tfrappe.ui.keys.on(shortcut, handler);\n\n\t// update standard shortcut list\n\tlet existing_shortcut_index = standard_shortcuts.findIndex((s) => s.shortcut === shortcut);\n\tlet new_shortcut = { shortcut, action, description, page, condition };\n\tif (existing_shortcut_index === -1) {\n\t\tstandard_shortcuts.push(new_shortcut);\n\t} else {\n\t\tstandard_shortcuts[existing_shortcut_index] = new_shortcut;\n\t}\n};\n\nfrappe.ui.keys.show_keyboard_shortcut_dialog = () => {\n\tif (frappe.ui.keys.is_dialog_shown) return;\n\n\tlet global_shortcuts = standard_shortcuts.filter((shortcut) => !shortcut.page);\n\tlet current_page_shortcuts = standard_shortcuts.filter(\n\t\t(shortcut) => shortcut.page && shortcut.page === window.cur_page.page.page\n\t);\n\n\tlet grid_shortcuts = standard_shortcuts.filter(\n\t\t(shortcut) => shortcut.page && shortcut.page === window.cur_page.page.frm\n\t);\n\n\tfunction generate_shortcuts_html(shortcuts, heading) {\n\t\tif (!shortcuts.length) {\n\t\t\treturn \"\";\n\t\t}\n\t\tlet html = shortcuts\n\t\t\t.filter((s) => (s.condition ? s.condition() : true))\n\t\t\t.filter((s) => !!s.description)\n\t\t\t.map((shortcut) => {\n\t\t\t\tlet shortcut_label = shortcut.shortcut\n\t\t\t\t\t.split(\"+\")\n\t\t\t\t\t.map(frappe.utils.to_title_case)\n\t\t\t\t\t.join(\"+\");\n\t\t\t\tif (frappe.utils.is_mac()) {\n\t\t\t\t\tshortcut_label = shortcut_label.replace(\"Ctrl\", \"\u2318\");\n\t\t\t\t}\n\t\t\t\treturn `<tr>\n\t\t\t\t\t<td width=\"40%\"><kbd>${shortcut_label}</kbd></td>\n\t\t\t\t\t<td width=\"60%\">${shortcut.description || \"\"}</td>\n\t\t\t\t</tr>`;\n\t\t\t})\n\t\t\t.join(\"\");\n\t\tif (!html) return \"\";\n\n\t\thtml = `<h5 style=\"margin: 0;\">${heading}</h5>\n\t\t\t<table style=\"margin-top: 10px;\" class=\"table table-bordered\">\n\t\t\t\t${html}\n\t\t\t</table>`;\n\t\treturn html;\n\t}\n\n\tlet global_shortcuts_html = generate_shortcuts_html(global_shortcuts, __(\"Global Shortcuts\"));\n\tlet current_page_shortcuts_html = generate_shortcuts_html(\n\t\tcurrent_page_shortcuts,\n\t\t__(\"Page Shortcuts\")\n\t);\n\tlet grid_shortcuts_html = generate_shortcuts_html(grid_shortcuts, __(\"Grid Shortcuts\"));\n\n\tlet dialog = new frappe.ui.Dialog({\n\t\ttitle: __(\"Keyboard Shortcuts\"),\n\t\ton_hide() {\n\t\t\tfrappe.ui.keys.is_dialog_shown = false;\n\t\t},\n\t});\n\n\tdialog.$body.append(global_shortcuts_html);\n\tdialog.$body.append(current_page_shortcuts_html);\n\tdialog.$body.append(grid_shortcuts_html);\n\tdialog.$body.append(`\n\t\t<div class=\"text-muted\">\n\t\t\t${__(\"Press Alt Key to trigger additional shortcuts in Menu and Sidebar\")}\n\t\t</div>\n\t`);\n\n\tdialog.show();\n\tfrappe.ui.keys.is_dialog_shown = true;\n};\n\nfrappe.ui.keys.get_key = function (e) {\n\tvar keycode = e.keyCode || e.which;\n\tvar key = frappe.ui.keys.key_map[keycode] || String.fromCharCode(keycode);\n\n\tif (e.ctrlKey || e.metaKey) {\n\t\t// add ctrl+ the key\n\t\tkey = \"ctrl+\" + key;\n\t}\n\tif (e.shiftKey) {\n\t\t// add ctrl+ the key\n\t\tkey = \"shift+\" + key;\n\t}\n\tif (e.altKey) {\n\t\t// add alt+ the key\n\t\tkey = \"alt+\" + key;\n\t}\n\tif (e.altKey && e.ctrlKey) {\n\t\t// add alt+ctrl+ the key or single key e.g f1,f2,etc..\n\t\treturn key.toLowerCase();\n\t}\n\treturn key.toLowerCase();\n};\n\nfrappe.ui.keys.on = function (key, handler) {\n\tif (!frappe.ui.keys.handlers[key]) {\n\t\tfrappe.ui.keys.handlers[key] = [];\n\t}\n\tfrappe.ui.keys.handlers[key].push(handler);\n};\n\nfrappe.ui.keys.off = function (key, page) {\n\tlet handlers = frappe.ui.keys.handlers[key];\n\tif (!handlers || handlers.length === 0) return;\n\tfrappe.ui.keys.handlers[key] = handlers.filter((h) => {\n\t\tif (!page) return false;\n\t\treturn h.page !== page;\n\t});\n};\n\nfrappe.ui.keys.add_shortcut({\n\tshortcut: \"ctrl+s\",\n\taction: function (e) {\n\t\tfrappe.app.trigger_primary_action();\n\t\te.preventDefault();\n\t\treturn false;\n\t},\n\tdescription: __(\"Trigger Primary Action\"),\n\tignore_inputs: true,\n});\n\nfrappe.ui.keys.add_shortcut({\n\tshortcut: \"ctrl+g\",\n\taction: function (e) {\n\t\t$(\"#navbar-search\").focus();\n\t\te.preventDefault();\n\t\treturn false;\n\t},\n\tdescription: __(\"Open Awesomebar\"),\n});\n\nfrappe.ui.keys.add_shortcut({\n\tshortcut: \"ctrl+h\",\n\taction: function (e) {\n\t\te.preventDefault();\n\t\t$(\".navbar-home img\").click();\n\t},\n\tdescription: __(\"Navigate Home\"),\n});\n\nfrappe.ui.keys.add_shortcut({\n\tshortcut: \"alt+s\",\n\taction: function (e) {\n\t\te.preventDefault();\n\t\t$(\".dropdown-navbar-user a\").eq(0).click();\n\t},\n\tdescription: __(\"Open Settings\"),\n});\n\nfrappe.ui.keys.add_shortcut({\n\tshortcut: \"shift+/\",\n\taction: function () {\n\t\tfrappe.ui.keys.show_keyboard_shortcut_dialog();\n\t},\n\tdescription: __(\"Show Keyboard Shortcuts\"),\n});\n\nfrappe.ui.keys.add_shortcut({\n\tshortcut: \"alt+h\",\n\taction: function (e) {\n\t\te.preventDefault();\n\t\t$(\".dropdown-help a\").eq(0).click();\n\t},\n\tdescription: __(\"Open Help\"),\n});\n\nfrappe.ui.keys.on(\"escape\", function (e) {\n\thandle_escape_key();\n});\n\nfrappe.ui.keys.on(\"esc\", function (e) {\n\thandle_escape_key();\n});\n\nfrappe.ui.keys.on(\"enter\", function (e) {\n\tif (window.cur_dialog && cur_dialog.confirm_dialog) {\n\t\tcur_dialog.get_primary_btn().trigger(\"click\");\n\t}\n});\n\nfrappe.ui.keys.on(\"ctrl+down\", function (e) {\n\tvar grid_row = frappe.ui.form.get_open_grid_form();\n\tgrid_row &&\n\t\tgrid_row.toggle_view(false, function () {\n\t\t\tgrid_row.open_next();\n\t\t});\n});\n\nfrappe.ui.keys.on(\"ctrl+up\", function (e) {\n\tvar grid_row = frappe.ui.form.get_open_grid_form();\n\tgrid_row &&\n\t\tgrid_row.toggle_view(false, function () {\n\t\t\tgrid_row.open_prev();\n\t\t});\n});\n\nfrappe.ui.keys.add_shortcut({\n\tshortcut: \"shift+ctrl+r\",\n\taction: function () {\n\t\tfrappe.ui.toolbar.clear_cache();\n\t},\n\tdescription: __(\"Clear Cache and Reload\"),\n});\n\nfrappe.ui.keys.key_map = {\n\t8: \"backspace\",\n\t9: \"tab\",\n\t13: \"enter\",\n\t16: \"shift\",\n\t17: \"ctrl\",\n\t91: \"meta\",\n\t18: \"alt\",\n\t27: \"escape\",\n\t37: \"left\",\n\t39: \"right\",\n\t38: \"up\",\n\t40: \"down\",\n\t32: \"space\",\n\t112: \"f1\",\n\t113: \"f2\",\n\t114: \"f3\",\n\t115: \"f4\",\n\t116: \"f5\",\n\t191: \"/\",\n\t188: \"<\",\n\t190: \">\",\n};\n\n\"abcdefghijklmnopqrstuvwxyz\".split(\"\").forEach((letter, i) => {\n\tfrappe.ui.keys.key_map[65 + i] = letter;\n});\n\n// keyCode map\nfrappe.ui.keyCode = {\n\tESCAPE: 27,\n\tLEFT: 37,\n\tRIGHT: 39,\n\tUP: 38,\n\tDOWN: 40,\n\tENTER: 13,\n\tTAB: 9,\n\tSPACE: 32,\n\tBACKSPACE: 8,\n};\n\nfunction handle_escape_key() {\n\tclose_grid_and_dialog();\n\tdocument.activeElement?.blur();\n}\n\nfunction close_grid_and_dialog() {\n\t// close open grid row\n\tvar open_row = $(\".grid-row-open\");\n\tif (open_row.length) {\n\t\tvar grid_row = open_row.data(\"grid_row\");\n\t\tgrid_row.toggle_view(false);\n\t\treturn false;\n\t}\n\n\t// close open dialog\n\tif (cur_dialog && !cur_dialog.no_cancel_flag && !cur_dialog.static) {\n\t\tcur_dialog.cancel();\n\t\treturn false;\n\t}\n}\n", "frappe.provide(\"frappe.utils\");\n/**\n * Simple EventEmitterMixin which uses jQuery's event system\n */\nconst EventEmitterMixin = {\n\tinit() {\n\t\tthis.jq = jQuery({});\n\t},\n\n\ttrigger(evt, data) {\n\t\t!this.jq && this.init();\n\t\tthis.jq.trigger(evt, data);\n\t},\n\n\tonce(evt, handler) {\n\t\t!this.jq && this.init();\n\t\tthis.jq.one(evt, (e, data) => handler(data));\n\t},\n\n\ton(evt, handler) {\n\t\t!this.jq && this.init();\n\t\tthis.jq.bind(evt, (e, data) => handler(data));\n\t},\n\n\toff(evt, handler) {\n\t\t!this.jq && this.init();\n\t\tthis.jq.unbind(evt, (e, data) => handler(data));\n\t},\n};\n\nfrappe.utils.make_event_emitter = function (object) {\n\tObject.assign(object, EventEmitterMixin);\n\treturn object;\n};\n\nexport default EventEmitterMixin;\n"],
  "mappings": "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",
  "names": []
}
